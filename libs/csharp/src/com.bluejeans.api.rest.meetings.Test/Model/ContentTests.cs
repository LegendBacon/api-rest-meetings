/* 
 * BlueJeans Meetings REST API
 *
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.bluejeans.api.rest.meetings.Api;
using com.bluejeans.api.rest.meetings.Model;
using com.bluejeans.api.rest.meetings.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.bluejeans.api.rest.meetings.Test
{
    /// <summary>
    ///  Class for testing Content
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ContentTests
    {
        // TODO uncomment below to declare an instance variable for Content
        //private Content instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Content
            //instance = new Content();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Content
        /// </summary>
        [Test]
        public void ContentInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Content
            //Assert.IsInstanceOfType<Content> (instance, "variable 'instance' is a Content");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'ContentType'
        /// </summary>
        [Test]
        public void ContentTypeTest()
        {
            // TODO unit test for the property 'ContentType'
        }
        /// <summary>
        /// Test the property 'ContentDescription'
        /// </summary>
        [Test]
        public void ContentDescriptionTest()
        {
            // TODO unit test for the property 'ContentDescription'
        }
        /// <summary>
        /// Test the property 'ContentUrl'
        /// </summary>
        [Test]
        public void ContentUrlTest()
        {
            // TODO unit test for the property 'ContentUrl'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'ContentLocation'
        /// </summary>
        [Test]
        public void ContentLocationTest()
        {
            // TODO unit test for the property 'ContentLocation'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Test]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Modified'
        /// </summary>
        [Test]
        public void ModifiedTest()
        {
            // TODO unit test for the property 'Modified'
        }
        /// <summary>
        /// Test the property 'ContentStatus'
        /// </summary>
        [Test]
        public void ContentStatusTest()
        {
            // TODO unit test for the property 'ContentStatus'
        }
        /// <summary>
        /// Test the property 'ContentName'
        /// </summary>
        [Test]
        public void ContentNameTest()
        {
            // TODO unit test for the property 'ContentName'
        }
        /// <summary>
        /// Test the property 'ContentCategory'
        /// </summary>
        [Test]
        public void ContentCategoryTest()
        {
            // TODO unit test for the property 'ContentCategory'
        }
        /// <summary>
        /// Test the property 'ContentSize'
        /// </summary>
        [Test]
        public void ContentSizeTest()
        {
            // TODO unit test for the property 'ContentSize'
        }
        /// <summary>
        /// Test the property 'ContentDuration'
        /// </summary>
        [Test]
        public void ContentDurationTest()
        {
            // TODO unit test for the property 'ContentDuration'
        }
        /// <summary>
        /// Test the property 'ContentProperties'
        /// </summary>
        [Test]
        public void ContentPropertiesTest()
        {
            // TODO unit test for the property 'ContentProperties'
        }

    }

}
