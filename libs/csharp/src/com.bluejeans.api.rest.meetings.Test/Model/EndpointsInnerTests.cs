/* 
 * BlueJeans Meetings REST API
 *
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.bluejeans.api.rest.meetings.Api;
using com.bluejeans.api.rest.meetings.Model;
using com.bluejeans.api.rest.meetings.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.bluejeans.api.rest.meetings.Test
{
    /// <summary>
    ///  Class for testing EndpointsInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class EndpointsInnerTests
    {
        // TODO uncomment below to declare an instance variable for EndpointsInner
        //private EndpointsInner instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of EndpointsInner
            //instance = new EndpointsInner();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EndpointsInner
        /// </summary>
        [Test]
        public void EndpointsInnerInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" EndpointsInner
            //Assert.IsInstanceOfType<EndpointsInner> (instance, "variable 'instance' is a EndpointsInner");
        }


        /// <summary>
        /// Test the property 'Meetingid'
        /// </summary>
        [Test]
        public void MeetingidTest()
        {
            // TODO unit test for the property 'Meetingid'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'CallQuality'
        /// </summary>
        [Test]
        public void CallQualityTest()
        {
            // TODO unit test for the property 'CallQuality'
        }
        /// <summary>
        /// Test the property 'Leader'
        /// </summary>
        [Test]
        public void LeaderTest()
        {
            // TODO unit test for the property 'Leader'
        }
        /// <summary>
        /// Test the property 'Callguid'
        /// </summary>
        [Test]
        public void CallguidTest()
        {
            // TODO unit test for the property 'Callguid'
        }
        /// <summary>
        /// Test the property 'Endpoint'
        /// </summary>
        [Test]
        public void EndpointTest()
        {
            // TODO unit test for the property 'Endpoint'
        }
        /// <summary>
        /// Test the property 'TalkDetected'
        /// </summary>
        [Test]
        public void TalkDetectedTest()
        {
            // TODO unit test for the property 'TalkDetected'
        }
        /// <summary>
        /// Test the property 'SecureCall'
        /// </summary>
        [Test]
        public void SecureCallTest()
        {
            // TODO unit test for the property 'SecureCall'
        }
        /// <summary>
        /// Test the property 'Layout'
        /// </summary>
        [Test]
        public void LayoutTest()
        {
            // TODO unit test for the property 'Layout'
        }
        /// <summary>
        /// Test the property 'SubLayout'
        /// </summary>
        [Test]
        public void SubLayoutTest()
        {
            // TODO unit test for the property 'SubLayout'
        }
        /// <summary>
        /// Test the property 'VideoRecv'
        /// </summary>
        [Test]
        public void VideoRecvTest()
        {
            // TODO unit test for the property 'VideoRecv'
        }
        /// <summary>
        /// Test the property 'VideoRecvLocalMute'
        /// </summary>
        [Test]
        public void VideoRecvLocalMuteTest()
        {
            // TODO unit test for the property 'VideoRecvLocalMute'
        }
        /// <summary>
        /// Test the property 'VideoRecvRemoteMute'
        /// </summary>
        [Test]
        public void VideoRecvRemoteMuteTest()
        {
            // TODO unit test for the property 'VideoRecvRemoteMute'
        }
        /// <summary>
        /// Test the property 'AudioRecv'
        /// </summary>
        [Test]
        public void AudioRecvTest()
        {
            // TODO unit test for the property 'AudioRecv'
        }
        /// <summary>
        /// Test the property 'AudioRecvLocalMute'
        /// </summary>
        [Test]
        public void AudioRecvLocalMuteTest()
        {
            // TODO unit test for the property 'AudioRecvLocalMute'
        }
        /// <summary>
        /// Test the property 'AudioRecvRemoteMute'
        /// </summary>
        [Test]
        public void AudioRecvRemoteMuteTest()
        {
            // TODO unit test for the property 'AudioRecvRemoteMute'
        }
        /// <summary>
        /// Test the property 'AudioRecvCodec'
        /// </summary>
        [Test]
        public void AudioRecvCodecTest()
        {
            // TODO unit test for the property 'AudioRecvCodec'
        }
        /// <summary>
        /// Test the property 'AudioSendCodec'
        /// </summary>
        [Test]
        public void AudioSendCodecTest()
        {
            // TODO unit test for the property 'AudioSendCodec'
        }
        /// <summary>
        /// Test the property 'VideoRecvCodec'
        /// </summary>
        [Test]
        public void VideoRecvCodecTest()
        {
            // TODO unit test for the property 'VideoRecvCodec'
        }
        /// <summary>
        /// Test the property 'VideoRecvHeight'
        /// </summary>
        [Test]
        public void VideoRecvHeightTest()
        {
            // TODO unit test for the property 'VideoRecvHeight'
        }
        /// <summary>
        /// Test the property 'VideoRecvWidth'
        /// </summary>
        [Test]
        public void VideoRecvWidthTest()
        {
            // TODO unit test for the property 'VideoRecvWidth'
        }
        /// <summary>
        /// Test the property 'VideoSendCodec'
        /// </summary>
        [Test]
        public void VideoSendCodecTest()
        {
            // TODO unit test for the property 'VideoSendCodec'
        }
        /// <summary>
        /// Test the property 'VideoSendHeight'
        /// </summary>
        [Test]
        public void VideoSendHeightTest()
        {
            // TODO unit test for the property 'VideoSendHeight'
        }
        /// <summary>
        /// Test the property 'VideoSendWidth'
        /// </summary>
        [Test]
        public void VideoSendWidthTest()
        {
            // TODO unit test for the property 'VideoSendWidth'
        }
        /// <summary>
        /// Test the property 'Visibility'
        /// </summary>
        [Test]
        public void VisibilityTest()
        {
            // TODO unit test for the property 'Visibility'
        }
        /// <summary>
        /// Test the property 'ChatEndpointGuid'
        /// </summary>
        [Test]
        public void ChatEndpointGuidTest()
        {
            // TODO unit test for the property 'ChatEndpointGuid'
        }
        /// <summary>
        /// Test the property 'EndpointGuid'
        /// </summary>
        [Test]
        public void EndpointGuidTest()
        {
            // TODO unit test for the property 'EndpointGuid'
        }
        /// <summary>
        /// Test the property 'RDCVersion'
        /// </summary>
        [Test]
        public void RDCVersionTest()
        {
            // TODO unit test for the property 'RDCVersion'
        }
        /// <summary>
        /// Test the property 'RDCControllerCapable'
        /// </summary>
        [Test]
        public void RDCControllerCapableTest()
        {
            // TODO unit test for the property 'RDCControllerCapable'
        }
        /// <summary>
        /// Test the property 'RDCControlleeCapable'
        /// </summary>
        [Test]
        public void RDCControlleeCapableTest()
        {
            // TODO unit test for the property 'RDCControlleeCapable'
        }
        /// <summary>
        /// Test the property 'Connections'
        /// </summary>
        [Test]
        public void ConnectionsTest()
        {
            // TODO unit test for the property 'Connections'
        }

    }

}
