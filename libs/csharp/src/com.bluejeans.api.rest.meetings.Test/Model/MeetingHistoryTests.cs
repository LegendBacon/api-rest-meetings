/* 
 * BlueJeans Meetings REST API
 *
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.bluejeans.api.rest.meetings.Api;
using com.bluejeans.api.rest.meetings.Model;
using com.bluejeans.api.rest.meetings.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.bluejeans.api.rest.meetings.Test
{
    /// <summary>
    ///  Class for testing MeetingHistory
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class MeetingHistoryTests
    {
        // TODO uncomment below to declare an instance variable for MeetingHistory
        //private MeetingHistory instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of MeetingHistory
            //instance = new MeetingHistory();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MeetingHistory
        /// </summary>
        [Test]
        public void MeetingHistoryInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" MeetingHistory
            //Assert.IsInstanceOfType<MeetingHistory> (instance, "variable 'instance' is a MeetingHistory");
        }


        /// <summary>
        /// Test the property 'MeetingGuid'
        /// </summary>
        [Test]
        public void MeetingGuidTest()
        {
            // TODO unit test for the property 'MeetingGuid'
        }
        /// <summary>
        /// Test the property 'MeetingNumericId'
        /// </summary>
        [Test]
        public void MeetingNumericIdTest()
        {
            // TODO unit test for the property 'MeetingNumericId'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'LeaderInfo'
        /// </summary>
        [Test]
        public void LeaderInfoTest()
        {
            // TODO unit test for the property 'LeaderInfo'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'MeetingDuration'
        /// </summary>
        [Test]
        public void MeetingDurationTest()
        {
            // TODO unit test for the property 'MeetingDuration'
        }
        /// <summary>
        /// Test the property 'MaxParticipantCount'
        /// </summary>
        [Test]
        public void MaxParticipantCountTest()
        {
            // TODO unit test for the property 'MaxParticipantCount'
        }
        /// <summary>
        /// Test the property 'TotalParticipantMinutes'
        /// </summary>
        [Test]
        public void TotalParticipantMinutesTest()
        {
            // TODO unit test for the property 'TotalParticipantMinutes'
        }
        /// <summary>
        /// Test the property 'MaxParticipantMinutes'
        /// </summary>
        [Test]
        public void MaxParticipantMinutesTest()
        {
            // TODO unit test for the property 'MaxParticipantMinutes'
        }
        /// <summary>
        /// Test the property 'ExtraParticipantMinutes'
        /// </summary>
        [Test]
        public void ExtraParticipantMinutesTest()
        {
            // TODO unit test for the property 'ExtraParticipantMinutes'
        }
        /// <summary>
        /// Test the property 'IsdnEndpoints'
        /// </summary>
        [Test]
        public void IsdnEndpointsTest()
        {
            // TODO unit test for the property 'IsdnEndpoints'
        }
        /// <summary>
        /// Test the property 'TotalDialoutMinutes'
        /// </summary>
        [Test]
        public void TotalDialoutMinutesTest()
        {
            // TODO unit test for the property 'TotalDialoutMinutes'
        }
        /// <summary>
        /// Test the property 'TotalTollFreeMinutes'
        /// </summary>
        [Test]
        public void TotalTollFreeMinutesTest()
        {
            // TODO unit test for the property 'TotalTollFreeMinutes'
        }
        /// <summary>
        /// Test the property 'CallDIDMinutes'
        /// </summary>
        [Test]
        public void CallDIDMinutesTest()
        {
            // TODO unit test for the property 'CallDIDMinutes'
        }
        /// <summary>
        /// Test the property 'StartTime'
        /// </summary>
        [Test]
        public void StartTimeTest()
        {
            // TODO unit test for the property 'StartTime'
        }
        /// <summary>
        /// Test the property 'EndTime'
        /// </summary>
        [Test]
        public void EndTimeTest()
        {
            // TODO unit test for the property 'EndTime'
        }
        /// <summary>
        /// Test the property 'MeetingStatus'
        /// </summary>
        [Test]
        public void MeetingStatusTest()
        {
            // TODO unit test for the property 'MeetingStatus'
        }
        /// <summary>
        /// Test the property 'MeetingThumbnail'
        /// </summary>
        [Test]
        public void MeetingThumbnailTest()
        {
            // TODO unit test for the property 'MeetingThumbnail'
        }
        /// <summary>
        /// Test the property 'StartTimeZone'
        /// </summary>
        [Test]
        public void StartTimeZoneTest()
        {
            // TODO unit test for the property 'StartTimeZone'
        }
        /// <summary>
        /// Test the property 'ProcessingStatus'
        /// </summary>
        [Test]
        public void ProcessingStatusTest()
        {
            // TODO unit test for the property 'ProcessingStatus'
        }
        /// <summary>
        /// Test the property 'ConcurrentCalls'
        /// </summary>
        [Test]
        public void ConcurrentCallsTest()
        {
            // TODO unit test for the property 'ConcurrentCalls'
        }
        /// <summary>
        /// Test the property 'UploadStatus'
        /// </summary>
        [Test]
        public void UploadStatusTest()
        {
            // TODO unit test for the property 'UploadStatus'
        }
        /// <summary>
        /// Test the property 'Pstnonly'
        /// </summary>
        [Test]
        public void PstnonlyTest()
        {
            // TODO unit test for the property 'Pstnonly'
        }
        /// <summary>
        /// Test the property 'ParticipantList'
        /// </summary>
        [Test]
        public void ParticipantListTest()
        {
            // TODO unit test for the property 'ParticipantList'
        }

    }

}
