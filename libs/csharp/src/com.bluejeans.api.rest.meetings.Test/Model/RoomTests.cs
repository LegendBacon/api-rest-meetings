/* 
 * BlueJeans Meetings REST API
 *
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.bluejeans.api.rest.meetings.Api;
using com.bluejeans.api.rest.meetings.Model;
using com.bluejeans.api.rest.meetings.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.bluejeans.api.rest.meetings.Test
{
    /// <summary>
    ///  Class for testing Room
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class RoomTests
    {
        // TODO uncomment below to declare an instance variable for Room
        //private Room instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Room
            //instance = new Room();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Room
        /// </summary>
        [Test]
        public void RoomInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Room
            //Assert.IsInstanceOfType<Room> (instance, "variable 'instance' is a Room");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'NumericId'
        /// </summary>
        [Test]
        public void NumericIdTest()
        {
            // TODO unit test for the property 'NumericId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'OriginPopId'
        /// </summary>
        [Test]
        public void OriginPopIdTest()
        {
            // TODO unit test for the property 'OriginPopId'
        }
        /// <summary>
        /// Test the property 'IsLargeMeeting'
        /// </summary>
        [Test]
        public void IsLargeMeetingTest()
        {
            // TODO unit test for the property 'IsLargeMeeting'
        }
        /// <summary>
        /// Test the property 'ShowVideoAnimations'
        /// </summary>
        [Test]
        public void ShowVideoAnimationsTest()
        {
            // TODO unit test for the property 'ShowVideoAnimations'
        }
        /// <summary>
        /// Test the property 'BackgroundImage'
        /// </summary>
        [Test]
        public void BackgroundImageTest()
        {
            // TODO unit test for the property 'BackgroundImage'
        }
        /// <summary>
        /// Test the property 'IsModeratorLess'
        /// </summary>
        [Test]
        public void IsModeratorLessTest()
        {
            // TODO unit test for the property 'IsModeratorLess'
        }
        /// <summary>
        /// Test the property 'WelcomeMessage'
        /// </summary>
        [Test]
        public void WelcomeMessageTest()
        {
            // TODO unit test for the property 'WelcomeMessage'
        }
        /// <summary>
        /// Test the property 'DisallowChat'
        /// </summary>
        [Test]
        public void DisallowChatTest()
        {
            // TODO unit test for the property 'DisallowChat'
        }
        /// <summary>
        /// Test the property 'EncryptionType'
        /// </summary>
        [Test]
        public void EncryptionTypeTest()
        {
            // TODO unit test for the property 'EncryptionType'
        }
        /// <summary>
        /// Test the property 'ShowAllParticipantsInIcs'
        /// </summary>
        [Test]
        public void ShowAllParticipantsInIcsTest()
        {
            // TODO unit test for the property 'ShowAllParticipantsInIcs'
        }
        /// <summary>
        /// Test the property 'ParticipantPasscode'
        /// </summary>
        [Test]
        public void ParticipantPasscodeTest()
        {
            // TODO unit test for the property 'ParticipantPasscode'
        }
        /// <summary>
        /// Test the property 'PublishMeeting'
        /// </summary>
        [Test]
        public void PublishMeetingTest()
        {
            // TODO unit test for the property 'PublishMeeting'
        }
        /// <summary>
        /// Test the property 'ModeratorLess'
        /// </summary>
        [Test]
        public void ModeratorLessTest()
        {
            // TODO unit test for the property 'ModeratorLess'
        }
        /// <summary>
        /// Test the property 'VideoBestFit'
        /// </summary>
        [Test]
        public void VideoBestFitTest()
        {
            // TODO unit test for the property 'VideoBestFit'
        }
        /// <summary>
        /// Test the property 'MuteParticipantsOnEntry'
        /// </summary>
        [Test]
        public void MuteParticipantsOnEntryTest()
        {
            // TODO unit test for the property 'MuteParticipantsOnEntry'
        }
        /// <summary>
        /// Test the property 'EnforceMeetingEncryption'
        /// </summary>
        [Test]
        public void EnforceMeetingEncryptionTest()
        {
            // TODO unit test for the property 'EnforceMeetingEncryption'
        }
        /// <summary>
        /// Test the property 'EnforceMeetingEncryptionAllowPSTN'
        /// </summary>
        [Test]
        public void EnforceMeetingEncryptionAllowPSTNTest()
        {
            // TODO unit test for the property 'EnforceMeetingEncryptionAllowPSTN'
        }
        /// <summary>
        /// Test the property 'IdleTimeout'
        /// </summary>
        [Test]
        public void IdleTimeoutTest()
        {
            // TODO unit test for the property 'IdleTimeout'
        }
        /// <summary>
        /// Test the property 'DefaultLayout'
        /// </summary>
        [Test]
        public void DefaultLayoutTest()
        {
            // TODO unit test for the property 'DefaultLayout'
        }
        /// <summary>
        /// Test the property 'PlayAudioAlerts'
        /// </summary>
        [Test]
        public void PlayAudioAlertsTest()
        {
            // TODO unit test for the property 'PlayAudioAlerts'
        }
        /// <summary>
        /// Test the property 'PersonalMeetingId'
        /// </summary>
        [Test]
        public void PersonalMeetingIdTest()
        {
            // TODO unit test for the property 'PersonalMeetingId'
        }
        /// <summary>
        /// Test the property 'ModeratorPasscode'
        /// </summary>
        [Test]
        public void ModeratorPasscodeTest()
        {
            // TODO unit test for the property 'ModeratorPasscode'
        }

    }

}
