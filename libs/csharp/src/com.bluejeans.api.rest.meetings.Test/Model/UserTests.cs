/* 
 * BlueJeans Meetings REST API
 *
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.bluejeans.api.rest.meetings.Api;
using com.bluejeans.api.rest.meetings.Model;
using com.bluejeans.api.rest.meetings.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.bluejeans.api.rest.meetings.Test
{
    /// <summary>
    ///  Class for testing User
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UserTests
    {
        // TODO uncomment below to declare an instance variable for User
        //private User instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of User
            //instance = new User();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of User
        /// </summary>
        [Test]
        public void UserInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" User
            //Assert.IsInstanceOfType<User> (instance, "variable 'instance' is a User");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Test]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }
        /// <summary>
        /// Test the property 'FirstName'
        /// </summary>
        [Test]
        public void FirstNameTest()
        {
            // TODO unit test for the property 'FirstName'
        }
        /// <summary>
        /// Test the property 'MiddleName'
        /// </summary>
        [Test]
        public void MiddleNameTest()
        {
            // TODO unit test for the property 'MiddleName'
        }
        /// <summary>
        /// Test the property 'LastName'
        /// </summary>
        [Test]
        public void LastNameTest()
        {
            // TODO unit test for the property 'LastName'
        }
        /// <summary>
        /// Test the property 'EmailId'
        /// </summary>
        [Test]
        public void EmailIdTest()
        {
            // TODO unit test for the property 'EmailId'
        }
        /// <summary>
        /// Test the property 'Company'
        /// </summary>
        [Test]
        public void CompanyTest()
        {
            // TODO unit test for the property 'Company'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Phone'
        /// </summary>
        [Test]
        public void PhoneTest()
        {
            // TODO unit test for the property 'Phone'
        }
        /// <summary>
        /// Test the property 'ProfilePicture'
        /// </summary>
        [Test]
        public void ProfilePictureTest()
        {
            // TODO unit test for the property 'ProfilePicture'
        }
        /// <summary>
        /// Test the property 'Timezone'
        /// </summary>
        [Test]
        public void TimezoneTest()
        {
            // TODO unit test for the property 'Timezone'
        }
        /// <summary>
        /// Test the property 'TimeFormat'
        /// </summary>
        [Test]
        public void TimeFormatTest()
        {
            // TODO unit test for the property 'TimeFormat'
        }
        /// <summary>
        /// Test the property 'Language'
        /// </summary>
        [Test]
        public void LanguageTest()
        {
            // TODO unit test for the property 'Language'
        }
        /// <summary>
        /// Test the property 'SkypeId'
        /// </summary>
        [Test]
        public void SkypeIdTest()
        {
            // TODO unit test for the property 'SkypeId'
        }
        /// <summary>
        /// Test the property 'GtalkId'
        /// </summary>
        [Test]
        public void GtalkIdTest()
        {
            // TODO unit test for the property 'GtalkId'
        }
        /// <summary>
        /// Test the property 'DefaultEndpoint'
        /// </summary>
        [Test]
        public void DefaultEndpointTest()
        {
            // TODO unit test for the property 'DefaultEndpoint'
        }
        /// <summary>
        /// Test the property 'PasswordChangeRequired'
        /// </summary>
        [Test]
        public void PasswordChangeRequiredTest()
        {
            // TODO unit test for the property 'PasswordChangeRequired'
        }
        /// <summary>
        /// Test the property 'MarketoId'
        /// </summary>
        [Test]
        public void MarketoIdTest()
        {
            // TODO unit test for the property 'MarketoId'
        }
        /// <summary>
        /// Test the property 'OptOutOffers'
        /// </summary>
        [Test]
        public void OptOutOffersTest()
        {
            // TODO unit test for the property 'OptOutOffers'
        }
        /// <summary>
        /// Test the property 'OptOutNews'
        /// </summary>
        [Test]
        public void OptOutNewsTest()
        {
            // TODO unit test for the property 'OptOutNews'
        }
        /// <summary>
        /// Test the property 'GeoInfo'
        /// </summary>
        [Test]
        public void GeoInfoTest()
        {
            // TODO unit test for the property 'GeoInfo'
        }
        /// <summary>
        /// Test the property 'HowDidYouHear'
        /// </summary>
        [Test]
        public void HowDidYouHearTest()
        {
            // TODO unit test for the property 'HowDidYouHear'
        }
        /// <summary>
        /// Test the property 'SfdcToken'
        /// </summary>
        [Test]
        public void SfdcTokenTest()
        {
            // TODO unit test for the property 'SfdcToken'
        }
        /// <summary>
        /// Test the property 'LinkedinProfileUrl'
        /// </summary>
        [Test]
        public void LinkedinProfileUrlTest()
        {
            // TODO unit test for the property 'LinkedinProfileUrl'
        }
        /// <summary>
        /// Test the property 'LastLogin'
        /// </summary>
        [Test]
        public void LastLoginTest()
        {
            // TODO unit test for the property 'LastLogin'
        }
        /// <summary>
        /// Test the property 'DateJoined'
        /// </summary>
        [Test]
        public void DateJoinedTest()
        {
            // TODO unit test for the property 'DateJoined'
        }
        /// <summary>
        /// Test the property 'Jid'
        /// </summary>
        [Test]
        public void JidTest()
        {
            // TODO unit test for the property 'Jid'
        }
        /// <summary>
        /// Test the property 'PrimaryPhone'
        /// </summary>
        [Test]
        public void PrimaryPhoneTest()
        {
            // TODO unit test for the property 'PrimaryPhone'
        }
        /// <summary>
        /// Test the property 'FailedLoginCount'
        /// </summary>
        [Test]
        public void FailedLoginCountTest()
        {
            // TODO unit test for the property 'FailedLoginCount'
        }
        /// <summary>
        /// Test the property 'IsInitialSetupDone'
        /// </summary>
        [Test]
        public void IsInitialSetupDoneTest()
        {
            // TODO unit test for the property 'IsInitialSetupDone'
        }
        /// <summary>
        /// Test the property 'ChannelId'
        /// </summary>
        [Test]
        public void ChannelIdTest()
        {
            // TODO unit test for the property 'ChannelId'
        }
        /// <summary>
        /// Test the property 'IsVerified'
        /// </summary>
        [Test]
        public void IsVerifiedTest()
        {
            // TODO unit test for the property 'IsVerified'
        }

    }

}
