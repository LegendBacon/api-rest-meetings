/*
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.meetings.model;

import java.util.Objects;
import java.util.Arrays;
import com.bluejeans.api.rest.meetings.model.ContentContentPropertiesLevels;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ContentContentProperties
 */

public class ContentContentProperties {
  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("thumbnail")
  private String thumbnail = null;

  @SerializedName("thumbnailSprite")
  private String thumbnailSprite = null;

  @SerializedName("hdsUrl")
  private String hdsUrl = null;

  @SerializedName("thumbnailCount")
  private Integer thumbnailCount = null;

  @SerializedName("thumbnailWidth")
  private Integer thumbnailWidth = null;

  @SerializedName("thumbnailHeight")
  private Integer thumbnailHeight = null;

  @SerializedName("thumbnailInterval")
  private Integer thumbnailInterval = null;

  @SerializedName("hlsUrl")
  private String hlsUrl = null;

  @SerializedName("levels")
  private List<ContentContentPropertiesLevels> levels = null;

  public ContentContentProperties duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(value = "")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public ContentContentProperties thumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * Get thumbnail
   * @return thumbnail
  **/
  @ApiModelProperty(value = "")
  public String getThumbnail() {
    return thumbnail;
  }

  public void setThumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
  }

  public ContentContentProperties thumbnailSprite(String thumbnailSprite) {
    this.thumbnailSprite = thumbnailSprite;
    return this;
  }

   /**
   * Get thumbnailSprite
   * @return thumbnailSprite
  **/
  @ApiModelProperty(value = "")
  public String getThumbnailSprite() {
    return thumbnailSprite;
  }

  public void setThumbnailSprite(String thumbnailSprite) {
    this.thumbnailSprite = thumbnailSprite;
  }

  public ContentContentProperties hdsUrl(String hdsUrl) {
    this.hdsUrl = hdsUrl;
    return this;
  }

   /**
   * Get hdsUrl
   * @return hdsUrl
  **/
  @ApiModelProperty(value = "")
  public String getHdsUrl() {
    return hdsUrl;
  }

  public void setHdsUrl(String hdsUrl) {
    this.hdsUrl = hdsUrl;
  }

  public ContentContentProperties thumbnailCount(Integer thumbnailCount) {
    this.thumbnailCount = thumbnailCount;
    return this;
  }

   /**
   * Get thumbnailCount
   * @return thumbnailCount
  **/
  @ApiModelProperty(value = "")
  public Integer getThumbnailCount() {
    return thumbnailCount;
  }

  public void setThumbnailCount(Integer thumbnailCount) {
    this.thumbnailCount = thumbnailCount;
  }

  public ContentContentProperties thumbnailWidth(Integer thumbnailWidth) {
    this.thumbnailWidth = thumbnailWidth;
    return this;
  }

   /**
   * Get thumbnailWidth
   * @return thumbnailWidth
  **/
  @ApiModelProperty(value = "")
  public Integer getThumbnailWidth() {
    return thumbnailWidth;
  }

  public void setThumbnailWidth(Integer thumbnailWidth) {
    this.thumbnailWidth = thumbnailWidth;
  }

  public ContentContentProperties thumbnailHeight(Integer thumbnailHeight) {
    this.thumbnailHeight = thumbnailHeight;
    return this;
  }

   /**
   * Get thumbnailHeight
   * @return thumbnailHeight
  **/
  @ApiModelProperty(value = "")
  public Integer getThumbnailHeight() {
    return thumbnailHeight;
  }

  public void setThumbnailHeight(Integer thumbnailHeight) {
    this.thumbnailHeight = thumbnailHeight;
  }

  public ContentContentProperties thumbnailInterval(Integer thumbnailInterval) {
    this.thumbnailInterval = thumbnailInterval;
    return this;
  }

   /**
   * Get thumbnailInterval
   * @return thumbnailInterval
  **/
  @ApiModelProperty(value = "")
  public Integer getThumbnailInterval() {
    return thumbnailInterval;
  }

  public void setThumbnailInterval(Integer thumbnailInterval) {
    this.thumbnailInterval = thumbnailInterval;
  }

  public ContentContentProperties hlsUrl(String hlsUrl) {
    this.hlsUrl = hlsUrl;
    return this;
  }

   /**
   * Get hlsUrl
   * @return hlsUrl
  **/
  @ApiModelProperty(value = "")
  public String getHlsUrl() {
    return hlsUrl;
  }

  public void setHlsUrl(String hlsUrl) {
    this.hlsUrl = hlsUrl;
  }

  public ContentContentProperties levels(List<ContentContentPropertiesLevels> levels) {
    this.levels = levels;
    return this;
  }

  public ContentContentProperties addLevelsItem(ContentContentPropertiesLevels levelsItem) {
    if (this.levels == null) {
      this.levels = new ArrayList<ContentContentPropertiesLevels>();
    }
    this.levels.add(levelsItem);
    return this;
  }

   /**
   * Get levels
   * @return levels
  **/
  @ApiModelProperty(value = "")
  public List<ContentContentPropertiesLevels> getLevels() {
    return levels;
  }

  public void setLevels(List<ContentContentPropertiesLevels> levels) {
    this.levels = levels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentContentProperties contentContentProperties = (ContentContentProperties) o;
    return Objects.equals(this.duration, contentContentProperties.duration) &&
        Objects.equals(this.thumbnail, contentContentProperties.thumbnail) &&
        Objects.equals(this.thumbnailSprite, contentContentProperties.thumbnailSprite) &&
        Objects.equals(this.hdsUrl, contentContentProperties.hdsUrl) &&
        Objects.equals(this.thumbnailCount, contentContentProperties.thumbnailCount) &&
        Objects.equals(this.thumbnailWidth, contentContentProperties.thumbnailWidth) &&
        Objects.equals(this.thumbnailHeight, contentContentProperties.thumbnailHeight) &&
        Objects.equals(this.thumbnailInterval, contentContentProperties.thumbnailInterval) &&
        Objects.equals(this.hlsUrl, contentContentProperties.hlsUrl) &&
        Objects.equals(this.levels, contentContentProperties.levels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, thumbnail, thumbnailSprite, hdsUrl, thumbnailCount, thumbnailWidth, thumbnailHeight, thumbnailInterval, hlsUrl, levels);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentContentProperties {\n");
    
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    thumbnailSprite: ").append(toIndentedString(thumbnailSprite)).append("\n");
    sb.append("    hdsUrl: ").append(toIndentedString(hdsUrl)).append("\n");
    sb.append("    thumbnailCount: ").append(toIndentedString(thumbnailCount)).append("\n");
    sb.append("    thumbnailWidth: ").append(toIndentedString(thumbnailWidth)).append("\n");
    sb.append("    thumbnailHeight: ").append(toIndentedString(thumbnailHeight)).append("\n");
    sb.append("    thumbnailInterval: ").append(toIndentedString(thumbnailInterval)).append("\n");
    sb.append("    hlsUrl: ").append(toIndentedString(hlsUrl)).append("\n");
    sb.append("    levels: ").append(toIndentedString(levels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

