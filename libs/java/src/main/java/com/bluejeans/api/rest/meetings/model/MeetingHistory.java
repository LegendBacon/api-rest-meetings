/*
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.meetings.model;

import java.util.Objects;
import java.util.Arrays;
import com.bluejeans.api.rest.meetings.model.MeetingHistoryLeaderInfo;
import com.bluejeans.api.rest.meetings.model.MeetingHistoryParticipantList;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MeetingHistory
 */

public class MeetingHistory {
  @SerializedName("meetingGuid")
  private String meetingGuid = null;

  @SerializedName("meetingNumericId")
  private String meetingNumericId = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("leaderInfo")
  private MeetingHistoryLeaderInfo leaderInfo = null;

  @SerializedName("userId")
  private Integer userId = null;

  @SerializedName("meetingDuration")
  private Long meetingDuration = null;

  @SerializedName("maxParticipantCount")
  private Integer maxParticipantCount = null;

  @SerializedName("totalParticipantMinutes")
  private Integer totalParticipantMinutes = null;

  @SerializedName("maxParticipantMinutes")
  private Integer maxParticipantMinutes = null;

  @SerializedName("extraParticipantMinutes")
  private Integer extraParticipantMinutes = null;

  @SerializedName("isdnEndpoints")
  private Integer isdnEndpoints = null;

  @SerializedName("totalDialoutMinutes")
  private Integer totalDialoutMinutes = null;

  @SerializedName("totalTollFreeMinutes")
  private Integer totalTollFreeMinutes = null;

  @SerializedName("callDIDMinutes")
  private Integer callDIDMinutes = null;

  @SerializedName("startTime")
  private Long startTime = null;

  @SerializedName("endTime")
  private Long endTime = null;

  /**
   * Gets or Sets meetingStatus
   */
  @JsonAdapter(MeetingStatusEnum.Adapter.class)
  public enum MeetingStatusEnum {
    COMPLETE("Complete");

    private String value;

    MeetingStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MeetingStatusEnum fromValue(String text) {
      for (MeetingStatusEnum b : MeetingStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MeetingStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MeetingStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MeetingStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MeetingStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("meetingStatus")
  private MeetingStatusEnum meetingStatus = null;

  @SerializedName("meetingThumbnail")
  private String meetingThumbnail = null;

  @SerializedName("startTimeZone")
  private String startTimeZone = null;

  /**
   * Gets or Sets processingStatus
   */
  @JsonAdapter(ProcessingStatusEnum.Adapter.class)
  public enum ProcessingStatusEnum {
    PROCESSED("PROCESSED");

    private String value;

    ProcessingStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProcessingStatusEnum fromValue(String text) {
      for (ProcessingStatusEnum b : ProcessingStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ProcessingStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProcessingStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProcessingStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ProcessingStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("processingStatus")
  private ProcessingStatusEnum processingStatus = null;

  @SerializedName("concurrentCalls")
  private String concurrentCalls = null;

  @SerializedName("uploadStatus")
  private String uploadStatus = null;

  @SerializedName("pstnonly")
  private Boolean pstnonly = null;

  @SerializedName("participantList")
  private List<MeetingHistoryParticipantList> participantList = null;

  public MeetingHistory meetingGuid(String meetingGuid) {
    this.meetingGuid = meetingGuid;
    return this;
  }

   /**
   * Get meetingGuid
   * @return meetingGuid
  **/
  @ApiModelProperty(value = "")
  public String getMeetingGuid() {
    return meetingGuid;
  }

  public void setMeetingGuid(String meetingGuid) {
    this.meetingGuid = meetingGuid;
  }

  public MeetingHistory meetingNumericId(String meetingNumericId) {
    this.meetingNumericId = meetingNumericId;
    return this;
  }

   /**
   * Get meetingNumericId
   * @return meetingNumericId
  **/
  @ApiModelProperty(value = "")
  public String getMeetingNumericId() {
    return meetingNumericId;
  }

  public void setMeetingNumericId(String meetingNumericId) {
    this.meetingNumericId = meetingNumericId;
  }

  public MeetingHistory title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public MeetingHistory description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public MeetingHistory leaderInfo(MeetingHistoryLeaderInfo leaderInfo) {
    this.leaderInfo = leaderInfo;
    return this;
  }

   /**
   * Get leaderInfo
   * @return leaderInfo
  **/
  @ApiModelProperty(value = "")
  public MeetingHistoryLeaderInfo getLeaderInfo() {
    return leaderInfo;
  }

  public void setLeaderInfo(MeetingHistoryLeaderInfo leaderInfo) {
    this.leaderInfo = leaderInfo;
  }

  public MeetingHistory userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public MeetingHistory meetingDuration(Long meetingDuration) {
    this.meetingDuration = meetingDuration;
    return this;
  }

   /**
   * Get meetingDuration
   * @return meetingDuration
  **/
  @ApiModelProperty(value = "")
  public Long getMeetingDuration() {
    return meetingDuration;
  }

  public void setMeetingDuration(Long meetingDuration) {
    this.meetingDuration = meetingDuration;
  }

  public MeetingHistory maxParticipantCount(Integer maxParticipantCount) {
    this.maxParticipantCount = maxParticipantCount;
    return this;
  }

   /**
   * Get maxParticipantCount
   * @return maxParticipantCount
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxParticipantCount() {
    return maxParticipantCount;
  }

  public void setMaxParticipantCount(Integer maxParticipantCount) {
    this.maxParticipantCount = maxParticipantCount;
  }

  public MeetingHistory totalParticipantMinutes(Integer totalParticipantMinutes) {
    this.totalParticipantMinutes = totalParticipantMinutes;
    return this;
  }

   /**
   * Get totalParticipantMinutes
   * @return totalParticipantMinutes
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalParticipantMinutes() {
    return totalParticipantMinutes;
  }

  public void setTotalParticipantMinutes(Integer totalParticipantMinutes) {
    this.totalParticipantMinutes = totalParticipantMinutes;
  }

  public MeetingHistory maxParticipantMinutes(Integer maxParticipantMinutes) {
    this.maxParticipantMinutes = maxParticipantMinutes;
    return this;
  }

   /**
   * Get maxParticipantMinutes
   * @return maxParticipantMinutes
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxParticipantMinutes() {
    return maxParticipantMinutes;
  }

  public void setMaxParticipantMinutes(Integer maxParticipantMinutes) {
    this.maxParticipantMinutes = maxParticipantMinutes;
  }

  public MeetingHistory extraParticipantMinutes(Integer extraParticipantMinutes) {
    this.extraParticipantMinutes = extraParticipantMinutes;
    return this;
  }

   /**
   * Get extraParticipantMinutes
   * @return extraParticipantMinutes
  **/
  @ApiModelProperty(value = "")
  public Integer getExtraParticipantMinutes() {
    return extraParticipantMinutes;
  }

  public void setExtraParticipantMinutes(Integer extraParticipantMinutes) {
    this.extraParticipantMinutes = extraParticipantMinutes;
  }

  public MeetingHistory isdnEndpoints(Integer isdnEndpoints) {
    this.isdnEndpoints = isdnEndpoints;
    return this;
  }

   /**
   * Get isdnEndpoints
   * @return isdnEndpoints
  **/
  @ApiModelProperty(value = "")
  public Integer getIsdnEndpoints() {
    return isdnEndpoints;
  }

  public void setIsdnEndpoints(Integer isdnEndpoints) {
    this.isdnEndpoints = isdnEndpoints;
  }

  public MeetingHistory totalDialoutMinutes(Integer totalDialoutMinutes) {
    this.totalDialoutMinutes = totalDialoutMinutes;
    return this;
  }

   /**
   * Get totalDialoutMinutes
   * @return totalDialoutMinutes
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalDialoutMinutes() {
    return totalDialoutMinutes;
  }

  public void setTotalDialoutMinutes(Integer totalDialoutMinutes) {
    this.totalDialoutMinutes = totalDialoutMinutes;
  }

  public MeetingHistory totalTollFreeMinutes(Integer totalTollFreeMinutes) {
    this.totalTollFreeMinutes = totalTollFreeMinutes;
    return this;
  }

   /**
   * Get totalTollFreeMinutes
   * @return totalTollFreeMinutes
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalTollFreeMinutes() {
    return totalTollFreeMinutes;
  }

  public void setTotalTollFreeMinutes(Integer totalTollFreeMinutes) {
    this.totalTollFreeMinutes = totalTollFreeMinutes;
  }

  public MeetingHistory callDIDMinutes(Integer callDIDMinutes) {
    this.callDIDMinutes = callDIDMinutes;
    return this;
  }

   /**
   * Get callDIDMinutes
   * @return callDIDMinutes
  **/
  @ApiModelProperty(value = "")
  public Integer getCallDIDMinutes() {
    return callDIDMinutes;
  }

  public void setCallDIDMinutes(Integer callDIDMinutes) {
    this.callDIDMinutes = callDIDMinutes;
  }

  public MeetingHistory startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @ApiModelProperty(value = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public MeetingHistory endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @ApiModelProperty(value = "")
  public Long getEndTime() {
    return endTime;
  }

  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }

  public MeetingHistory meetingStatus(MeetingStatusEnum meetingStatus) {
    this.meetingStatus = meetingStatus;
    return this;
  }

   /**
   * Get meetingStatus
   * @return meetingStatus
  **/
  @ApiModelProperty(value = "")
  public MeetingStatusEnum getMeetingStatus() {
    return meetingStatus;
  }

  public void setMeetingStatus(MeetingStatusEnum meetingStatus) {
    this.meetingStatus = meetingStatus;
  }

  public MeetingHistory meetingThumbnail(String meetingThumbnail) {
    this.meetingThumbnail = meetingThumbnail;
    return this;
  }

   /**
   * Get meetingThumbnail
   * @return meetingThumbnail
  **/
  @ApiModelProperty(value = "")
  public String getMeetingThumbnail() {
    return meetingThumbnail;
  }

  public void setMeetingThumbnail(String meetingThumbnail) {
    this.meetingThumbnail = meetingThumbnail;
  }

  public MeetingHistory startTimeZone(String startTimeZone) {
    this.startTimeZone = startTimeZone;
    return this;
  }

   /**
   * Get startTimeZone
   * @return startTimeZone
  **/
  @ApiModelProperty(value = "")
  public String getStartTimeZone() {
    return startTimeZone;
  }

  public void setStartTimeZone(String startTimeZone) {
    this.startTimeZone = startTimeZone;
  }

  public MeetingHistory processingStatus(ProcessingStatusEnum processingStatus) {
    this.processingStatus = processingStatus;
    return this;
  }

   /**
   * Get processingStatus
   * @return processingStatus
  **/
  @ApiModelProperty(value = "")
  public ProcessingStatusEnum getProcessingStatus() {
    return processingStatus;
  }

  public void setProcessingStatus(ProcessingStatusEnum processingStatus) {
    this.processingStatus = processingStatus;
  }

  public MeetingHistory concurrentCalls(String concurrentCalls) {
    this.concurrentCalls = concurrentCalls;
    return this;
  }

   /**
   * Get concurrentCalls
   * @return concurrentCalls
  **/
  @ApiModelProperty(value = "")
  public String getConcurrentCalls() {
    return concurrentCalls;
  }

  public void setConcurrentCalls(String concurrentCalls) {
    this.concurrentCalls = concurrentCalls;
  }

  public MeetingHistory uploadStatus(String uploadStatus) {
    this.uploadStatus = uploadStatus;
    return this;
  }

   /**
   * Get uploadStatus
   * @return uploadStatus
  **/
  @ApiModelProperty(value = "")
  public String getUploadStatus() {
    return uploadStatus;
  }

  public void setUploadStatus(String uploadStatus) {
    this.uploadStatus = uploadStatus;
  }

  public MeetingHistory pstnonly(Boolean pstnonly) {
    this.pstnonly = pstnonly;
    return this;
  }

   /**
   * Get pstnonly
   * @return pstnonly
  **/
  @ApiModelProperty(value = "")
  public Boolean isPstnonly() {
    return pstnonly;
  }

  public void setPstnonly(Boolean pstnonly) {
    this.pstnonly = pstnonly;
  }

  public MeetingHistory participantList(List<MeetingHistoryParticipantList> participantList) {
    this.participantList = participantList;
    return this;
  }

  public MeetingHistory addParticipantListItem(MeetingHistoryParticipantList participantListItem) {
    if (this.participantList == null) {
      this.participantList = new ArrayList<MeetingHistoryParticipantList>();
    }
    this.participantList.add(participantListItem);
    return this;
  }

   /**
   * Get participantList
   * @return participantList
  **/
  @ApiModelProperty(value = "")
  public List<MeetingHistoryParticipantList> getParticipantList() {
    return participantList;
  }

  public void setParticipantList(List<MeetingHistoryParticipantList> participantList) {
    this.participantList = participantList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeetingHistory meetingHistory = (MeetingHistory) o;
    return Objects.equals(this.meetingGuid, meetingHistory.meetingGuid) &&
        Objects.equals(this.meetingNumericId, meetingHistory.meetingNumericId) &&
        Objects.equals(this.title, meetingHistory.title) &&
        Objects.equals(this.description, meetingHistory.description) &&
        Objects.equals(this.leaderInfo, meetingHistory.leaderInfo) &&
        Objects.equals(this.userId, meetingHistory.userId) &&
        Objects.equals(this.meetingDuration, meetingHistory.meetingDuration) &&
        Objects.equals(this.maxParticipantCount, meetingHistory.maxParticipantCount) &&
        Objects.equals(this.totalParticipantMinutes, meetingHistory.totalParticipantMinutes) &&
        Objects.equals(this.maxParticipantMinutes, meetingHistory.maxParticipantMinutes) &&
        Objects.equals(this.extraParticipantMinutes, meetingHistory.extraParticipantMinutes) &&
        Objects.equals(this.isdnEndpoints, meetingHistory.isdnEndpoints) &&
        Objects.equals(this.totalDialoutMinutes, meetingHistory.totalDialoutMinutes) &&
        Objects.equals(this.totalTollFreeMinutes, meetingHistory.totalTollFreeMinutes) &&
        Objects.equals(this.callDIDMinutes, meetingHistory.callDIDMinutes) &&
        Objects.equals(this.startTime, meetingHistory.startTime) &&
        Objects.equals(this.endTime, meetingHistory.endTime) &&
        Objects.equals(this.meetingStatus, meetingHistory.meetingStatus) &&
        Objects.equals(this.meetingThumbnail, meetingHistory.meetingThumbnail) &&
        Objects.equals(this.startTimeZone, meetingHistory.startTimeZone) &&
        Objects.equals(this.processingStatus, meetingHistory.processingStatus) &&
        Objects.equals(this.concurrentCalls, meetingHistory.concurrentCalls) &&
        Objects.equals(this.uploadStatus, meetingHistory.uploadStatus) &&
        Objects.equals(this.pstnonly, meetingHistory.pstnonly) &&
        Objects.equals(this.participantList, meetingHistory.participantList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meetingGuid, meetingNumericId, title, description, leaderInfo, userId, meetingDuration, maxParticipantCount, totalParticipantMinutes, maxParticipantMinutes, extraParticipantMinutes, isdnEndpoints, totalDialoutMinutes, totalTollFreeMinutes, callDIDMinutes, startTime, endTime, meetingStatus, meetingThumbnail, startTimeZone, processingStatus, concurrentCalls, uploadStatus, pstnonly, participantList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeetingHistory {\n");
    
    sb.append("    meetingGuid: ").append(toIndentedString(meetingGuid)).append("\n");
    sb.append("    meetingNumericId: ").append(toIndentedString(meetingNumericId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    leaderInfo: ").append(toIndentedString(leaderInfo)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    meetingDuration: ").append(toIndentedString(meetingDuration)).append("\n");
    sb.append("    maxParticipantCount: ").append(toIndentedString(maxParticipantCount)).append("\n");
    sb.append("    totalParticipantMinutes: ").append(toIndentedString(totalParticipantMinutes)).append("\n");
    sb.append("    maxParticipantMinutes: ").append(toIndentedString(maxParticipantMinutes)).append("\n");
    sb.append("    extraParticipantMinutes: ").append(toIndentedString(extraParticipantMinutes)).append("\n");
    sb.append("    isdnEndpoints: ").append(toIndentedString(isdnEndpoints)).append("\n");
    sb.append("    totalDialoutMinutes: ").append(toIndentedString(totalDialoutMinutes)).append("\n");
    sb.append("    totalTollFreeMinutes: ").append(toIndentedString(totalTollFreeMinutes)).append("\n");
    sb.append("    callDIDMinutes: ").append(toIndentedString(callDIDMinutes)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    meetingStatus: ").append(toIndentedString(meetingStatus)).append("\n");
    sb.append("    meetingThumbnail: ").append(toIndentedString(meetingThumbnail)).append("\n");
    sb.append("    startTimeZone: ").append(toIndentedString(startTimeZone)).append("\n");
    sb.append("    processingStatus: ").append(toIndentedString(processingStatus)).append("\n");
    sb.append("    concurrentCalls: ").append(toIndentedString(concurrentCalls)).append("\n");
    sb.append("    uploadStatus: ").append(toIndentedString(uploadStatus)).append("\n");
    sb.append("    pstnonly: ").append(toIndentedString(pstnonly)).append("\n");
    sb.append("    participantList: ").append(toIndentedString(participantList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

