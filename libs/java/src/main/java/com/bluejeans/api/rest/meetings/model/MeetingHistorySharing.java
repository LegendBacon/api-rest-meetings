/*
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.meetings.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MeetingHistorySharing
 */

public class MeetingHistorySharing {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("meetingGuid")
  private String meetingGuid = null;

  @SerializedName("ownerId")
  private Integer ownerId = null;

  @SerializedName("sharingUrl")
  private String sharingUrl = null;

  /**
   * Gets or Sets recepientType
   */
  @JsonAdapter(RecepientTypeEnum.Adapter.class)
  public enum RecepientTypeEnum {
    ENTERPRISE("ENTERPRISE"),
    
    PUBLIC("PUBLIC");

    private String value;

    RecepientTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecepientTypeEnum fromValue(String text) {
      for (RecepientTypeEnum b : RecepientTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RecepientTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecepientTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecepientTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RecepientTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("recepientType")
  private RecepientTypeEnum recepientType = null;

  @SerializedName("properties")
  private String properties = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("downloadable")
  private Boolean downloadable = null;

  @SerializedName("passcode")
  private String passcode = null;

  @SerializedName("validity")
  private String validity = null;

  @SerializedName("created")
  private Long created = null;

  @SerializedName("lastmodified")
  private Long lastmodified = null;

  public MeetingHistorySharing id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public MeetingHistorySharing meetingGuid(String meetingGuid) {
    this.meetingGuid = meetingGuid;
    return this;
  }

   /**
   * Get meetingGuid
   * @return meetingGuid
  **/
  @ApiModelProperty(value = "")
  public String getMeetingGuid() {
    return meetingGuid;
  }

  public void setMeetingGuid(String meetingGuid) {
    this.meetingGuid = meetingGuid;
  }

  public MeetingHistorySharing ownerId(Integer ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * Numeric user ID for the meeting owner.
   * @return ownerId
  **/
  @ApiModelProperty(value = "Numeric user ID for the meeting owner.")
  public Integer getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(Integer ownerId) {
    this.ownerId = ownerId;
  }

  public MeetingHistorySharing sharingUrl(String sharingUrl) {
    this.sharingUrl = sharingUrl;
    return this;
  }

   /**
   * Get sharingUrl
   * @return sharingUrl
  **/
  @ApiModelProperty(value = "")
  public String getSharingUrl() {
    return sharingUrl;
  }

  public void setSharingUrl(String sharingUrl) {
    this.sharingUrl = sharingUrl;
  }

  public MeetingHistorySharing recepientType(RecepientTypeEnum recepientType) {
    this.recepientType = recepientType;
    return this;
  }

   /**
   * Get recepientType
   * @return recepientType
  **/
  @ApiModelProperty(value = "")
  public RecepientTypeEnum getRecepientType() {
    return recepientType;
  }

  public void setRecepientType(RecepientTypeEnum recepientType) {
    this.recepientType = recepientType;
  }

  public MeetingHistorySharing properties(String properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public String getProperties() {
    return properties;
  }

  public void setProperties(String properties) {
    this.properties = properties;
  }

  public MeetingHistorySharing status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public MeetingHistorySharing downloadable(Boolean downloadable) {
    this.downloadable = downloadable;
    return this;
  }

   /**
   * Get downloadable
   * @return downloadable
  **/
  @ApiModelProperty(value = "")
  public Boolean isDownloadable() {
    return downloadable;
  }

  public void setDownloadable(Boolean downloadable) {
    this.downloadable = downloadable;
  }

  public MeetingHistorySharing passcode(String passcode) {
    this.passcode = passcode;
    return this;
  }

   /**
   * Get passcode
   * @return passcode
  **/
  @ApiModelProperty(value = "")
  public String getPasscode() {
    return passcode;
  }

  public void setPasscode(String passcode) {
    this.passcode = passcode;
  }

  public MeetingHistorySharing validity(String validity) {
    this.validity = validity;
    return this;
  }

   /**
   * Get validity
   * @return validity
  **/
  @ApiModelProperty(value = "")
  public String getValidity() {
    return validity;
  }

  public void setValidity(String validity) {
    this.validity = validity;
  }

  public MeetingHistorySharing created(Long created) {
    this.created = created;
    return this;
  }

   /**
   * A [UNIX Timestamp](https://currentmillis.com/) in milliseconds
   * @return created
  **/
  @ApiModelProperty(value = "A [UNIX Timestamp](https://currentmillis.com/) in milliseconds")
  public Long getCreated() {
    return created;
  }

  public void setCreated(Long created) {
    this.created = created;
  }

  public MeetingHistorySharing lastmodified(Long lastmodified) {
    this.lastmodified = lastmodified;
    return this;
  }

   /**
   * A [UNIX Timestamp](https://currentmillis.com/) in milliseconds
   * @return lastmodified
  **/
  @ApiModelProperty(value = "A [UNIX Timestamp](https://currentmillis.com/) in milliseconds")
  public Long getLastmodified() {
    return lastmodified;
  }

  public void setLastmodified(Long lastmodified) {
    this.lastmodified = lastmodified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeetingHistorySharing meetingHistorySharing = (MeetingHistorySharing) o;
    return Objects.equals(this.id, meetingHistorySharing.id) &&
        Objects.equals(this.meetingGuid, meetingHistorySharing.meetingGuid) &&
        Objects.equals(this.ownerId, meetingHistorySharing.ownerId) &&
        Objects.equals(this.sharingUrl, meetingHistorySharing.sharingUrl) &&
        Objects.equals(this.recepientType, meetingHistorySharing.recepientType) &&
        Objects.equals(this.properties, meetingHistorySharing.properties) &&
        Objects.equals(this.status, meetingHistorySharing.status) &&
        Objects.equals(this.downloadable, meetingHistorySharing.downloadable) &&
        Objects.equals(this.passcode, meetingHistorySharing.passcode) &&
        Objects.equals(this.validity, meetingHistorySharing.validity) &&
        Objects.equals(this.created, meetingHistorySharing.created) &&
        Objects.equals(this.lastmodified, meetingHistorySharing.lastmodified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, meetingGuid, ownerId, sharingUrl, recepientType, properties, status, downloadable, passcode, validity, created, lastmodified);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeetingHistorySharing {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    meetingGuid: ").append(toIndentedString(meetingGuid)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    sharingUrl: ").append(toIndentedString(sharingUrl)).append("\n");
    sb.append("    recepientType: ").append(toIndentedString(recepientType)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    downloadable: ").append(toIndentedString(downloadable)).append("\n");
    sb.append("    passcode: ").append(toIndentedString(passcode)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastmodified: ").append(toIndentedString(lastmodified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

