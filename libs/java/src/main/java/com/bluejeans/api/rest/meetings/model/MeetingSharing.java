/*
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.meetings.model;

import java.util.Objects;
import java.util.Arrays;
import com.bluejeans.api.rest.meetings.model.MeetingSharingProperties;
import com.bluejeans.api.rest.meetings.model.RecepientOptionsComp;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MeetingSharing
 */

public class MeetingSharing {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("meetingGuid")
  private String meetingGuid = null;

  @SerializedName("ownerId")
  private Integer ownerId = null;

  @SerializedName("sharingUrl")
  private String sharingUrl = null;

  @SerializedName("recepientType")
  private RecepientOptionsComp recepientType = null;

  @SerializedName("properties")
  private MeetingSharingProperties properties = null;

  /**
   * This status field indicates the state of the sharing authorization record.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    DELETED("DELETED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("downloadable")
  private Boolean downloadable = null;

  @SerializedName("passcode")
  private String passcode = null;

  @SerializedName("validity")
  private String validity = null;

  @SerializedName("created")
  private Long created = null;

  @SerializedName("lastmodified")
  private Long lastmodified = null;

  public MeetingSharing id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * This field is the Sharing Authorization unique identifier.
   * @return id
  **/
  @ApiModelProperty(value = "This field is the Sharing Authorization unique identifier.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public MeetingSharing meetingGuid(String meetingGuid) {
    this.meetingGuid = meetingGuid;
    return this;
  }

   /**
   * The meetingGuid is a globally unique Id for this particular recording. It is a string which contains the numeric meeting id, followed by a colon, followed by a 128-bit integer number formatted as 6 alphanumeric segments separated by dashes.
   * @return meetingGuid
  **/
  @ApiModelProperty(value = "The meetingGuid is a globally unique Id for this particular recording. It is a string which contains the numeric meeting id, followed by a colon, followed by a 128-bit integer number formatted as 6 alphanumeric segments separated by dashes.")
  public String getMeetingGuid() {
    return meetingGuid;
  }

  public void setMeetingGuid(String meetingGuid) {
    this.meetingGuid = meetingGuid;
  }

  public MeetingSharing ownerId(Integer ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The ownerId field is the unique Id number of the BlueJeans account that owns the recording
   * @return ownerId
  **/
  @ApiModelProperty(value = "The ownerId field is the unique Id number of the BlueJeans account that owns the recording")
  public Integer getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(Integer ownerId) {
    this.ownerId = ownerId;
  }

  public MeetingSharing sharingUrl(String sharingUrl) {
    this.sharingUrl = sharingUrl;
    return this;
  }

   /**
   * Get sharingUrl
   * @return sharingUrl
  **/
  @ApiModelProperty(value = "")
  public String getSharingUrl() {
    return sharingUrl;
  }

  public void setSharingUrl(String sharingUrl) {
    this.sharingUrl = sharingUrl;
  }

  public MeetingSharing recepientType(RecepientOptionsComp recepientType) {
    this.recepientType = recepientType;
    return this;
  }

   /**
   * Get recepientType
   * @return recepientType
  **/
  @ApiModelProperty(value = "")
  public RecepientOptionsComp getRecepientType() {
    return recepientType;
  }

  public void setRecepientType(RecepientOptionsComp recepientType) {
    this.recepientType = recepientType;
  }

  public MeetingSharing properties(MeetingSharingProperties properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public MeetingSharingProperties getProperties() {
    return properties;
  }

  public void setProperties(MeetingSharingProperties properties) {
    this.properties = properties;
  }

  public MeetingSharing status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * This status field indicates the state of the sharing authorization record.
   * @return status
  **/
  @ApiModelProperty(value = "This status field indicates the state of the sharing authorization record.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public MeetingSharing downloadable(Boolean downloadable) {
    this.downloadable = downloadable;
    return this;
  }

   /**
   * The downloadable field indicates whether the recording can be downloaded
   * @return downloadable
  **/
  @ApiModelProperty(value = "The downloadable field indicates whether the recording can be downloaded")
  public Boolean isDownloadable() {
    return downloadable;
  }

  public void setDownloadable(Boolean downloadable) {
    this.downloadable = downloadable;
  }

  public MeetingSharing passcode(String passcode) {
    this.passcode = passcode;
    return this;
  }

   /**
   * TBD
   * @return passcode
  **/
  @ApiModelProperty(value = "TBD")
  public String getPasscode() {
    return passcode;
  }

  public void setPasscode(String passcode) {
    this.passcode = passcode;
  }

  public MeetingSharing validity(String validity) {
    this.validity = validity;
    return this;
  }

   /**
   * TBD
   * @return validity
  **/
  @ApiModelProperty(value = "TBD")
  public String getValidity() {
    return validity;
  }

  public void setValidity(String validity) {
    this.validity = validity;
  }

  public MeetingSharing created(Long created) {
    this.created = created;
    return this;
  }

   /**
   * Date, since epoch time, that the recording was created (in milliseconds).
   * @return created
  **/
  @ApiModelProperty(value = "Date, since epoch time, that the recording was created (in milliseconds).")
  public Long getCreated() {
    return created;
  }

  public void setCreated(Long created) {
    this.created = created;
  }

  public MeetingSharing lastmodified(Long lastmodified) {
    this.lastmodified = lastmodified;
    return this;
  }

   /**
   * Date, since epoch time, that the recording was last modified (in milliseconds).
   * @return lastmodified
  **/
  @ApiModelProperty(value = "Date, since epoch time, that the recording was last modified (in milliseconds).")
  public Long getLastmodified() {
    return lastmodified;
  }

  public void setLastmodified(Long lastmodified) {
    this.lastmodified = lastmodified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeetingSharing meetingSharing = (MeetingSharing) o;
    return Objects.equals(this.id, meetingSharing.id) &&
        Objects.equals(this.meetingGuid, meetingSharing.meetingGuid) &&
        Objects.equals(this.ownerId, meetingSharing.ownerId) &&
        Objects.equals(this.sharingUrl, meetingSharing.sharingUrl) &&
        Objects.equals(this.recepientType, meetingSharing.recepientType) &&
        Objects.equals(this.properties, meetingSharing.properties) &&
        Objects.equals(this.status, meetingSharing.status) &&
        Objects.equals(this.downloadable, meetingSharing.downloadable) &&
        Objects.equals(this.passcode, meetingSharing.passcode) &&
        Objects.equals(this.validity, meetingSharing.validity) &&
        Objects.equals(this.created, meetingSharing.created) &&
        Objects.equals(this.lastmodified, meetingSharing.lastmodified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, meetingGuid, ownerId, sharingUrl, recepientType, properties, status, downloadable, passcode, validity, created, lastmodified);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeetingSharing {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    meetingGuid: ").append(toIndentedString(meetingGuid)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    sharingUrl: ").append(toIndentedString(sharingUrl)).append("\n");
    sb.append("    recepientType: ").append(toIndentedString(recepientType)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    downloadable: ").append(toIndentedString(downloadable)).append("\n");
    sb.append("    passcode: ").append(toIndentedString(passcode)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastmodified: ").append(toIndentedString(lastmodified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

