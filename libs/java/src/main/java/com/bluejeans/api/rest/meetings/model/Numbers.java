/*
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.meetings.model;

import java.util.Objects;
import java.util.Arrays;
import com.bluejeans.api.rest.meetings.model.NumbersNumbers;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Numbers
 */

public class Numbers {
  @SerializedName("meetingId")
  private String meetingId = null;

  @SerializedName("allowDirectDial")
  private Boolean allowDirectDial = null;

  @SerializedName("useAttendeePasscode")
  private Boolean useAttendeePasscode = null;

  @SerializedName("pstnNumbersUrl")
  private String pstnNumbersUrl = null;

  @SerializedName("moderatorPasscode")
  private String moderatorPasscode = null;

  @SerializedName("precision")
  private String precision = null;

  @SerializedName("pstnLocalizationSupported")
  private Boolean pstnLocalizationSupported = null;

  @SerializedName("partnerIntegratedMeeting")
  private Boolean partnerIntegratedMeeting = null;

  @SerializedName("numbers")
  private List<NumbersNumbers> numbers = null;

  public Numbers meetingId(String meetingId) {
    this.meetingId = meetingId;
    return this;
  }

   /**
   * Get meetingId
   * @return meetingId
  **/
  @ApiModelProperty(value = "")
  public String getMeetingId() {
    return meetingId;
  }

  public void setMeetingId(String meetingId) {
    this.meetingId = meetingId;
  }

  public Numbers allowDirectDial(Boolean allowDirectDial) {
    this.allowDirectDial = allowDirectDial;
    return this;
  }

   /**
   * Get allowDirectDial
   * @return allowDirectDial
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowDirectDial() {
    return allowDirectDial;
  }

  public void setAllowDirectDial(Boolean allowDirectDial) {
    this.allowDirectDial = allowDirectDial;
  }

  public Numbers useAttendeePasscode(Boolean useAttendeePasscode) {
    this.useAttendeePasscode = useAttendeePasscode;
    return this;
  }

   /**
   * Get useAttendeePasscode
   * @return useAttendeePasscode
  **/
  @ApiModelProperty(value = "")
  public Boolean isUseAttendeePasscode() {
    return useAttendeePasscode;
  }

  public void setUseAttendeePasscode(Boolean useAttendeePasscode) {
    this.useAttendeePasscode = useAttendeePasscode;
  }

  public Numbers pstnNumbersUrl(String pstnNumbersUrl) {
    this.pstnNumbersUrl = pstnNumbersUrl;
    return this;
  }

   /**
   * Get pstnNumbersUrl
   * @return pstnNumbersUrl
  **/
  @ApiModelProperty(value = "")
  public String getPstnNumbersUrl() {
    return pstnNumbersUrl;
  }

  public void setPstnNumbersUrl(String pstnNumbersUrl) {
    this.pstnNumbersUrl = pstnNumbersUrl;
  }

  public Numbers moderatorPasscode(String moderatorPasscode) {
    this.moderatorPasscode = moderatorPasscode;
    return this;
  }

   /**
   * Get moderatorPasscode
   * @return moderatorPasscode
  **/
  @ApiModelProperty(value = "")
  public String getModeratorPasscode() {
    return moderatorPasscode;
  }

  public void setModeratorPasscode(String moderatorPasscode) {
    this.moderatorPasscode = moderatorPasscode;
  }

  public Numbers precision(String precision) {
    this.precision = precision;
    return this;
  }

   /**
   * Get precision
   * @return precision
  **/
  @ApiModelProperty(value = "")
  public String getPrecision() {
    return precision;
  }

  public void setPrecision(String precision) {
    this.precision = precision;
  }

  public Numbers pstnLocalizationSupported(Boolean pstnLocalizationSupported) {
    this.pstnLocalizationSupported = pstnLocalizationSupported;
    return this;
  }

   /**
   * Get pstnLocalizationSupported
   * @return pstnLocalizationSupported
  **/
  @ApiModelProperty(value = "")
  public Boolean isPstnLocalizationSupported() {
    return pstnLocalizationSupported;
  }

  public void setPstnLocalizationSupported(Boolean pstnLocalizationSupported) {
    this.pstnLocalizationSupported = pstnLocalizationSupported;
  }

  public Numbers partnerIntegratedMeeting(Boolean partnerIntegratedMeeting) {
    this.partnerIntegratedMeeting = partnerIntegratedMeeting;
    return this;
  }

   /**
   * Get partnerIntegratedMeeting
   * @return partnerIntegratedMeeting
  **/
  @ApiModelProperty(value = "")
  public Boolean isPartnerIntegratedMeeting() {
    return partnerIntegratedMeeting;
  }

  public void setPartnerIntegratedMeeting(Boolean partnerIntegratedMeeting) {
    this.partnerIntegratedMeeting = partnerIntegratedMeeting;
  }

  public Numbers numbers(List<NumbersNumbers> numbers) {
    this.numbers = numbers;
    return this;
  }

  public Numbers addNumbersItem(NumbersNumbers numbersItem) {
    if (this.numbers == null) {
      this.numbers = new ArrayList<NumbersNumbers>();
    }
    this.numbers.add(numbersItem);
    return this;
  }

   /**
   * Get numbers
   * @return numbers
  **/
  @ApiModelProperty(value = "")
  public List<NumbersNumbers> getNumbers() {
    return numbers;
  }

  public void setNumbers(List<NumbersNumbers> numbers) {
    this.numbers = numbers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Numbers numbers = (Numbers) o;
    return Objects.equals(this.meetingId, numbers.meetingId) &&
        Objects.equals(this.allowDirectDial, numbers.allowDirectDial) &&
        Objects.equals(this.useAttendeePasscode, numbers.useAttendeePasscode) &&
        Objects.equals(this.pstnNumbersUrl, numbers.pstnNumbersUrl) &&
        Objects.equals(this.moderatorPasscode, numbers.moderatorPasscode) &&
        Objects.equals(this.precision, numbers.precision) &&
        Objects.equals(this.pstnLocalizationSupported, numbers.pstnLocalizationSupported) &&
        Objects.equals(this.partnerIntegratedMeeting, numbers.partnerIntegratedMeeting) &&
        Objects.equals(this.numbers, numbers.numbers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meetingId, allowDirectDial, useAttendeePasscode, pstnNumbersUrl, moderatorPasscode, precision, pstnLocalizationSupported, partnerIntegratedMeeting, numbers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Numbers {\n");
    
    sb.append("    meetingId: ").append(toIndentedString(meetingId)).append("\n");
    sb.append("    allowDirectDial: ").append(toIndentedString(allowDirectDial)).append("\n");
    sb.append("    useAttendeePasscode: ").append(toIndentedString(useAttendeePasscode)).append("\n");
    sb.append("    pstnNumbersUrl: ").append(toIndentedString(pstnNumbersUrl)).append("\n");
    sb.append("    moderatorPasscode: ").append(toIndentedString(moderatorPasscode)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    pstnLocalizationSupported: ").append(toIndentedString(pstnLocalizationSupported)).append("\n");
    sb.append("    partnerIntegratedMeeting: ").append(toIndentedString(partnerIntegratedMeeting)).append("\n");
    sb.append("    numbers: ").append(toIndentedString(numbers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

