/*
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.meetings.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PayloadMeetingState
 */

public class PayloadMeetingState {
  @SerializedName("locked")
  private Boolean locked = null;

  /**
   * Set to \&quot;terminated\&quot; to end the meeting.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    TERMINATED("terminated");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("audioMuteOnEntry")
  private Boolean audioMuteOnEntry = null;

  @SerializedName("isLargeMeeting")
  private Boolean isLargeMeeting = null;

  public PayloadMeetingState locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * True to lock, false to unlock.
   * @return locked
  **/
  @ApiModelProperty(value = "True to lock, false to unlock.")
  public Boolean isLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  public PayloadMeetingState status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Set to \&quot;terminated\&quot; to end the meeting.
   * @return status
  **/
  @ApiModelProperty(value = "Set to \"terminated\" to end the meeting.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PayloadMeetingState audioMuteOnEntry(Boolean audioMuteOnEntry) {
    this.audioMuteOnEntry = audioMuteOnEntry;
    return this;
  }

   /**
   * True forces each party to automatically mute when the connect into the meeting
   * @return audioMuteOnEntry
  **/
  @ApiModelProperty(value = "True forces each party to automatically mute when the connect into the meeting")
  public Boolean isAudioMuteOnEntry() {
    return audioMuteOnEntry;
  }

  public void setAudioMuteOnEntry(Boolean audioMuteOnEntry) {
    this.audioMuteOnEntry = audioMuteOnEntry;
  }

  public PayloadMeetingState isLargeMeeting(Boolean isLargeMeeting) {
    this.isLargeMeeting = isLargeMeeting;
    return this;
  }

   /**
   * True causes BlueJeans to suppress playing announcement/tones when a party joins the meeting
   * @return isLargeMeeting
  **/
  @ApiModelProperty(value = "True causes BlueJeans to suppress playing announcement/tones when a party joins the meeting")
  public Boolean isIsLargeMeeting() {
    return isLargeMeeting;
  }

  public void setIsLargeMeeting(Boolean isLargeMeeting) {
    this.isLargeMeeting = isLargeMeeting;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayloadMeetingState payloadMeetingState = (PayloadMeetingState) o;
    return Objects.equals(this.locked, payloadMeetingState.locked) &&
        Objects.equals(this.status, payloadMeetingState.status) &&
        Objects.equals(this.audioMuteOnEntry, payloadMeetingState.audioMuteOnEntry) &&
        Objects.equals(this.isLargeMeeting, payloadMeetingState.isLargeMeeting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locked, status, audioMuteOnEntry, isLargeMeeting);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayloadMeetingState {\n");
    
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    audioMuteOnEntry: ").append(toIndentedString(audioMuteOnEntry)).append("\n");
    sb.append("    isLargeMeeting: ").append(toIndentedString(isLargeMeeting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

