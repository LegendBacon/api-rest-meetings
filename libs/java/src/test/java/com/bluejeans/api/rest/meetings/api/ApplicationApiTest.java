/*
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.meetings.api;

import com.bluejeans.api.rest.meetings.ApiException;
import com.bluejeans.api.rest.meetings.model.Application;
import com.bluejeans.api.rest.meetings.model.ApplicationList;
import com.bluejeans.api.rest.meetings.model.ApplicationSecret;
import com.bluejeans.api.rest.meetings.model.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationApi
 */
@Ignore
public class ApplicationApiTest {

    private final ApplicationApi api = new ApplicationApi();

    
    /**
     * Create Client Application
     *
     * This endpoint creates a client application for use in 3-legged OAuth2 authorization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createClientApplicationTest() throws ApiException {
        Integer userId = null;
        Application application = null;
        Application response = api.createClientApplication(userId, application);

        // TODO: test validations
    }
    
    /**
     * List Client Applications
     *
     * This endpoint lists all the client applications associated with the access_token.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listClientApplicationsTest() throws ApiException {
        Integer userId = null;
        ApplicationList response = api.listClientApplications(userId);

        // TODO: test validations
    }
    
    /**
     * Regenerate Client Application Secret
     *
     * This endpoint forces the regeneration of a client application secret for use in 3-legged OAuth2 authorization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void regenerateClientApplicationSecretTest() throws ApiException {
        Integer userId = null;
        String clientId = null;
        ApplicationSecret response = api.regenerateClientApplicationSecret(userId, clientId);

        // TODO: test validations
    }
    
    /**
     * Update Client Application
     *
     * This endpoint updates a client application for use in 3-legged OAuth2 authorization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateClientApplicationTest() throws ApiException {
        Integer userId = null;
        String clientId = null;
        Application application = null;
        Application response = api.updateClientApplication(userId, clientId, application);

        // TODO: test validations
    }
    
}
