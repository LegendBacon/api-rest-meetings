/*
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.meetings.api;

import com.bluejeans.api.rest.meetings.ApiException;
import com.bluejeans.api.rest.meetings.model.EnterpriseCreateUser;
import com.bluejeans.api.rest.meetings.model.EnterpriseUserSearch;
import com.bluejeans.api.rest.meetings.model.Error;
import com.bluejeans.api.rest.meetings.model.TagListComp;
import com.bluejeans.api.rest.meetings.model.UserId;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnterpriseApi
 */
@Ignore
public class EnterpriseApiTest {

    private final EnterpriseApi api = new EnterpriseApi();

    
    /**
     * Set Enterprise Tags
     *
     * This endpoint modifies the list of profile tags associated with the specified enterprise.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeEnterpriseTagsTest() throws ApiException {
        Integer enterpriseId = null;
        String action = null;
        String tag = null;
        TagListComp response = api.changeEnterpriseTags(enterpriseId, action, tag);

        // TODO: test validations
    }
    
    /**
     * Create User
     *
     * This endpoint creates a user profile within the specified enterprise.  It is the first of the 2-step process to create a BlueJeans user.  It should be followed by an API call to create the user&#39;s personal meeting room.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEnterpriseUserTest() throws ApiException {
        Integer enterpriseId = null;
        EnterpriseCreateUser enterpriseUser = null;
        String billingCategory = null;
        Boolean forcePasswordChange = null;
        Boolean isAdmin = null;
        UserId response = api.createEnterpriseUser(enterpriseId, enterpriseUser, billingCategory, forcePasswordChange, isAdmin);

        // TODO: test validations
    }
    
    /**
     * Export Enterprise Users
     *
     * This endpoint exports existing users into a CSV file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportUsersTest() throws ApiException {
        Integer enterpriseId = null;
        api.exportUsers(enterpriseId);

        // TODO: test validations
    }
    
    /**
     * List Enterprise Tags
     *
     * This endpoint retrieves all profile tags defined for the specified enterprise.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEnterpriseTagsTest() throws ApiException {
        Integer enterpriseId = null;
        TagListComp response = api.getEnterpriseTags(enterpriseId);

        // TODO: test validations
    }
    
    /**
     * Remove Enterprise User
     *
     * This endpoint allows removing a user from an enterprise; it does not delete the user. Requires enterprise admin access level.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeUserTest() throws ApiException {
        Integer enterpriseId = null;
        Integer userId = null;
        api.removeUser(enterpriseId, userId);

        // TODO: test validations
    }
    
    /**
     * Search for User(s)
     *
     * This endpoint provides a search facility for the specified enterprise.  &lt;ul&gt;&lt;li&gt;If textSearch is provided, the results will be a partial string-match search of the given textSearch value.&lt;/li&gt;&lt;li&gt; Otherwise, the search will return an exact lookup by emailId.&lt;/li&gt;&lt;/ul&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchUsersTest() throws ApiException {
        Integer enterpriseId = null;
        String fields = null;
        String order = null;
        String sortBy = null;
        String textSearch = null;
        String emailId = null;
        Integer pageSize = null;
        Integer pageNumber = null;
        EnterpriseUserSearch response = api.searchUsers(enterpriseId, fields, order, sortBy, textSearch, emailId, pageSize, pageNumber);

        // TODO: test validations
    }
    
}
