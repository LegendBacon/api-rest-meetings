/**
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PersonalMeetingRoomAdvancedMeetingOptions', 'model/PersonalMeetingRoomAttendees', 'model/PersonalMeetingRoomFirst', 'model/PersonalMeetingRoomLast', 'model/PersonalMeetingRoomModerator', 'model/PersonalMeetingRoomNext'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PersonalMeetingRoomAdvancedMeetingOptions'), require('./PersonalMeetingRoomAttendees'), require('./PersonalMeetingRoomFirst'), require('./PersonalMeetingRoomLast'), require('./PersonalMeetingRoomModerator'), require('./PersonalMeetingRoomNext'));
  } else {
    // Browser globals (root is window)
    if (!root.BlueJeansMeetingsRestApi) {
      root.BlueJeansMeetingsRestApi = {};
    }
    root.BlueJeansMeetingsRestApi.PersonalMeetingRoom = factory(root.BlueJeansMeetingsRestApi.ApiClient, root.BlueJeansMeetingsRestApi.PersonalMeetingRoomAdvancedMeetingOptions, root.BlueJeansMeetingsRestApi.PersonalMeetingRoomAttendees, root.BlueJeansMeetingsRestApi.PersonalMeetingRoomFirst, root.BlueJeansMeetingsRestApi.PersonalMeetingRoomLast, root.BlueJeansMeetingsRestApi.PersonalMeetingRoomModerator, root.BlueJeansMeetingsRestApi.PersonalMeetingRoomNext);
  }
}(this, function(ApiClient, PersonalMeetingRoomAdvancedMeetingOptions, PersonalMeetingRoomAttendees, PersonalMeetingRoomFirst, PersonalMeetingRoomLast, PersonalMeetingRoomModerator, PersonalMeetingRoomNext) {
  'use strict';




  /**
   * The PersonalMeetingRoom model module.
   * @module model/PersonalMeetingRoom
   * @version 1.0.4402212019
   */

  /**
   * Constructs a new <code>PersonalMeetingRoom</code>.
   * @alias module:model/PersonalMeetingRoom
   * @class
   */
  var exports = function() {
    var _this = this;








































  };

  /**
   * Constructs a <code>PersonalMeetingRoom</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PersonalMeetingRoom} obj Optional instance to populate.
   * @return {module:model/PersonalMeetingRoom} The populated <code>PersonalMeetingRoom</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('uuid')) {
        obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('start')) {
        obj['start'] = ApiClient.convertToType(data['start'], 'Number');
      }
      if (data.hasOwnProperty('end')) {
        obj['end'] = ApiClient.convertToType(data['end'], 'Number');
      }
      if (data.hasOwnProperty('timezone')) {
        obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
      }
      if (data.hasOwnProperty('advancedMeetingOptions')) {
        obj['advancedMeetingOptions'] = PersonalMeetingRoomAdvancedMeetingOptions.constructFromObject(data['advancedMeetingOptions']);
      }
      if (data.hasOwnProperty('notificationUrl')) {
        obj['notificationUrl'] = ApiClient.convertToType(data['notificationUrl'], 'String');
      }
      if (data.hasOwnProperty('notificationData')) {
        obj['notificationData'] = ApiClient.convertToType(data['notificationData'], 'String');
      }
      if (data.hasOwnProperty('moderator')) {
        obj['moderator'] = PersonalMeetingRoomModerator.constructFromObject(data['moderator']);
      }
      if (data.hasOwnProperty('numericMeetingId')) {
        obj['numericMeetingId'] = ApiClient.convertToType(data['numericMeetingId'], 'String');
      }
      if (data.hasOwnProperty('attendeePasscode')) {
        obj['attendeePasscode'] = ApiClient.convertToType(data['attendeePasscode'], 'String');
      }
      if (data.hasOwnProperty('addAttendeePasscode')) {
        obj['addAttendeePasscode'] = ApiClient.convertToType(data['addAttendeePasscode'], 'Boolean');
      }
      if (data.hasOwnProperty('deleted')) {
        obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
      }
      if (data.hasOwnProperty('allow720p')) {
        obj['allow720p'] = ApiClient.convertToType(data['allow720p'], 'Boolean');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('locked')) {
        obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
      }
      if (data.hasOwnProperty('sequenceNumber')) {
        obj['sequenceNumber'] = ApiClient.convertToType(data['sequenceNumber'], 'Number');
      }
      if (data.hasOwnProperty('icsUid')) {
        obj['icsUid'] = ApiClient.convertToType(data['icsUid'], 'String');
      }
      if (data.hasOwnProperty('endPointType')) {
        obj['endPointType'] = ApiClient.convertToType(data['endPointType'], 'String');
      }
      if (data.hasOwnProperty('endPointVersion')) {
        obj['endPointVersion'] = ApiClient.convertToType(data['endPointVersion'], 'String');
      }
      if (data.hasOwnProperty('attendees')) {
        obj['attendees'] = ApiClient.convertToType(data['attendees'], [PersonalMeetingRoomAttendees]);
      }
      if (data.hasOwnProperty('isLargeMeeting')) {
        obj['isLargeMeeting'] = ApiClient.convertToType(data['isLargeMeeting'], 'Boolean');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'Number');
      }
      if (data.hasOwnProperty('lastModified')) {
        obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Number');
      }
      if (data.hasOwnProperty('isExpired')) {
        obj['isExpired'] = ApiClient.convertToType(data['isExpired'], 'Boolean');
      }
      if (data.hasOwnProperty('parentMeetingId')) {
        obj['parentMeetingId'] = ApiClient.convertToType(data['parentMeetingId'], 'Number');
      }
      if (data.hasOwnProperty('parentMeetingUUID')) {
        obj['parentMeetingUUID'] = ApiClient.convertToType(data['parentMeetingUUID'], 'String');
      }
      if (data.hasOwnProperty('nextOccurrence')) {
        obj['nextOccurrence'] = ApiClient.convertToType(data['nextOccurrence'], 'Number');
      }
      if (data.hasOwnProperty('timelessMeeting')) {
        obj['timelessMeeting'] = ApiClient.convertToType(data['timelessMeeting'], 'Boolean');
      }
      if (data.hasOwnProperty('endlessMeeting')) {
        obj['endlessMeeting'] = ApiClient.convertToType(data['endlessMeeting'], 'Boolean');
      }
      if (data.hasOwnProperty('first')) {
        obj['first'] = PersonalMeetingRoomFirst.constructFromObject(data['first']);
      }
      if (data.hasOwnProperty('last')) {
        obj['last'] = PersonalMeetingRoomLast.constructFromObject(data['last']);
      }
      if (data.hasOwnProperty('next')) {
        obj['next'] = PersonalMeetingRoomNext.constructFromObject(data['next']);
      }
      if (data.hasOwnProperty('nextStart')) {
        obj['nextStart'] = ApiClient.convertToType(data['nextStart'], 'Number');
      }
      if (data.hasOwnProperty('nextEnd')) {
        obj['nextEnd'] = ApiClient.convertToType(data['nextEnd'], 'Number');
      }
      if (data.hasOwnProperty('isPersonalMeeting')) {
        obj['isPersonalMeeting'] = ApiClient.convertToType(data['isPersonalMeeting'], 'Boolean');
      }
      if (data.hasOwnProperty('inviteeJoinOption')) {
        obj['inviteeJoinOption'] = ApiClient.convertToType(data['inviteeJoinOption'], 'Number');
      }
    }
    return obj;
  }

  /**
   * This is a unique number that is associated with the personal meeting room.
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * This is a unique guid used in BlueJeans cloud that is associated with the personal meeting room.
   * @member {String} uuid
   */
  exports.prototype['uuid'] = undefined;
  /**
   * This is the name associated with personal room.
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * This is a short descriptive text for the personal meeting room.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * This is the epoch-based starting time (in milliseconds) of the personal meeting.
   * @member {Number} start
   */
  exports.prototype['start'] = undefined;
  /**
   * This is the epoch-based ending time (in milliseconds) of the personal meeting.
   * @member {Number} end
   */
  exports.prototype['end'] = undefined;
  /**
   * This is the unix timezone string describing the timezone for the meeting
   * @member {String} timezone
   */
  exports.prototype['timezone'] = undefined;
  /**
   * @member {module:model/PersonalMeetingRoomAdvancedMeetingOptions} advancedMeetingOptions
   */
  exports.prototype['advancedMeetingOptions'] = undefined;
  /**
   * this property is not used in the BlueJeans Meetings product
   * @member {String} notificationUrl
   */
  exports.prototype['notificationUrl'] = undefined;
  /**
   * this property is not used in the BlueJeans Meetings product
   * @member {String} notificationData
   */
  exports.prototype['notificationData'] = undefined;
  /**
   * @member {module:model/PersonalMeetingRoomModerator} moderator
   */
  exports.prototype['moderator'] = undefined;
  /**
   * This is the number that a participant would enter when joining this meeting.
   * @member {String} numericMeetingId
   */
  exports.prototype['numericMeetingId'] = undefined;
  /**
   * This is a passcode that must be provided by people joining the meeting.
   * @member {String} attendeePasscode
   */
  exports.prototype['attendeePasscode'] = undefined;
  /**
   * If set, causes BlueJeans to require participants to enter a passcode in order to join the meeting.
   * @member {Boolean} addAttendeePasscode
   */
  exports.prototype['addAttendeePasscode'] = undefined;
  /**
   * If set, indicates that this meeting has been deleted.
   * @member {Boolean} deleted
   */
  exports.prototype['deleted'] = undefined;
  /**
   * If set allows clients to send and receive 720p video resolution.
   * @member {Boolean} allow720p
   */
  exports.prototype['allow720p'] = undefined;
  /**
   * This string indicates the meeting's operational status.
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * If set the meeting has been locked, and future attendees require a member to allow them to join.
   * @member {Boolean} locked
   */
  exports.prototype['locked'] = undefined;
  /**
   * Internal tracking number
   * @member {Number} sequenceNumber
   */
  exports.prototype['sequenceNumber'] = undefined;
  /**
   * Internal tracking number
   * @member {String} icsUid
   */
  exports.prototype['icsUid'] = undefined;
  /**
   * This string is the name of the type of scheduling entity.
   * @member {String} endPointType
   * @default 'WEB_APP'
   */
  exports.prototype['endPointType'] = 'WEB_APP';
  /**
   * This is a string that describes the version number of the endpoint type.
   * @member {String} endPointVersion
   */
  exports.prototype['endPointVersion'] = undefined;
  /**
   * @member {Array.<module:model/PersonalMeetingRoomAttendees>} attendees
   */
  exports.prototype['attendees'] = undefined;
  /**
   * If set indicates that this meeting will have a large
   * @member {Boolean} isLargeMeeting
   */
  exports.prototype['isLargeMeeting'] = undefined;
  /**
   * This is the date and time (in milliseconds) when the meeting was created.
   * @member {Number} created
   */
  exports.prototype['created'] = undefined;
  /**
   * This is the date and time (in milliseconds) when the meeting was last changed.
   * @member {Number} lastModified
   */
  exports.prototype['lastModified'] = undefined;
  /**
   * If set indicates that the meeting has expired.
   * @member {Boolean} isExpired
   */
  exports.prototype['isExpired'] = undefined;
  /**
   * This is a unique number associated with the first meeting in a series of meetings.
   * @member {Number} parentMeetingId
   */
  exports.prototype['parentMeetingId'] = undefined;
  /**
   * This is the guid for the first meeting in a series of meetings.
   * @member {String} parentMeetingUUID
   */
  exports.prototype['parentMeetingUUID'] = undefined;
  /**
   * This is a unique number associated with the next in a chain of meetings.
   * @member {Number} nextOccurrence
   */
  exports.prototype['nextOccurrence'] = undefined;
  /**
   * This field, if set, indicates that this meeting is continously running.
   * @member {Boolean} timelessMeeting
   */
  exports.prototype['timelessMeeting'] = undefined;
  /**
   * This field, if set, indicates that there is no end of recurring meetings.
   * @member {Boolean} endlessMeeting
   */
  exports.prototype['endlessMeeting'] = undefined;
  /**
   * @member {module:model/PersonalMeetingRoomFirst} first
   */
  exports.prototype['first'] = undefined;
  /**
   * @member {module:model/PersonalMeetingRoomLast} last
   */
  exports.prototype['last'] = undefined;
  /**
   * @member {module:model/PersonalMeetingRoomNext} next
   */
  exports.prototype['next'] = undefined;
  /**
   * This is the epoch-based starting time for the next in chain of meetings.
   * @member {Number} nextStart
   */
  exports.prototype['nextStart'] = undefined;
  /**
   * This is the epoch-based ending time for the next in chain of meetings.
   * @member {Number} nextEnd
   */
  exports.prototype['nextEnd'] = undefined;
  /**
   * if set, indicates that this ia personal meeting.
   * @member {Boolean} isPersonalMeeting
   */
  exports.prototype['isPersonalMeeting'] = undefined;
  /**
   * How Invitee should join
   * @member {Number} inviteeJoinOption
   */
  exports.prototype['inviteeJoinOption'] = undefined;



  return exports;
}));


