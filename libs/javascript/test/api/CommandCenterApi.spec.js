/**
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BlueJeansMeetingsRestApi);
  }
}(this, function(expect, BlueJeansMeetingsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BlueJeansMeetingsRestApi.CommandCenterApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommandCenterApi', function() {
    describe('getEndpointDistribution', function() {
      it('should call getEndpointDistribution successfully', function(done) {
        //uncomment below and update the code to test getEndpointDistribution
        //instance.getEndpointDistribution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEndpointDistributionV2', function() {
      it('should call getEndpointDistributionV2 successfully', function(done) {
        //uncomment below and update the code to test getEndpointDistributionV2
        //instance.getEndpointDistributionV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEnterpriseOverallSummary', function() {
      it('should call getEnterpriseOverallSummary successfully', function(done) {
        //uncomment below and update the code to test getEnterpriseOverallSummary
        //instance.getEnterpriseOverallSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEnterpriseUsersActive', function() {
      it('should call getEnterpriseUsersActive successfully', function(done) {
        //uncomment below and update the code to test getEnterpriseUsersActive
        //instance.getEnterpriseUsersActive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeedbackComments', function() {
      it('should call getFeedbackComments successfully', function(done) {
        //uncomment below and update the code to test getFeedbackComments
        //instance.getFeedbackComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeedbackCommentsV2', function() {
      it('should call getFeedbackCommentsV2 successfully', function(done) {
        //uncomment below and update the code to test getFeedbackCommentsV2
        //instance.getFeedbackCommentsV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeedbackCount', function() {
      it('should call getFeedbackCount successfully', function(done) {
        //uncomment below and update the code to test getFeedbackCount
        //instance.getFeedbackCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeedbackCountV2', function() {
      it('should call getFeedbackCountV2 successfully', function(done) {
        //uncomment below and update the code to test getFeedbackCountV2
        //instance.getFeedbackCountV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGeoMap', function() {
      it('should call getGeoMap successfully', function(done) {
        //uncomment below and update the code to test getGeoMap
        //instance.getGeoMap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingEndpointsLiveByEnterprise', function() {
      it('should call getMeetingEndpointsLiveByEnterprise successfully', function(done) {
        //uncomment below and update the code to test getMeetingEndpointsLiveByEnterprise
        //instance.getMeetingEndpointsLiveByEnterprise(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingPastByEnterprise', function() {
      it('should call getMeetingPastByEnterprise successfully', function(done) {
        //uncomment below and update the code to test getMeetingPastByEnterprise
        //instance.getMeetingPastByEnterprise(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingPastByUser', function() {
      it('should call getMeetingPastByUser successfully', function(done) {
        //uncomment below and update the code to test getMeetingPastByUser
        //instance.getMeetingPastByUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingUsage', function() {
      it('should call getMeetingUsage successfully', function(done) {
        //uncomment below and update the code to test getMeetingUsage
        //instance.getMeetingUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingUsageV2', function() {
      it('should call getMeetingUsageV2 successfully', function(done) {
        //uncomment below and update the code to test getMeetingUsageV2
        //instance.getMeetingUsageV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingsLiveByEnterprise', function() {
      it('should call getMeetingsLiveByEnterprise successfully', function(done) {
        //uncomment below and update the code to test getMeetingsLiveByEnterprise
        //instance.getMeetingsLiveByEnterprise(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingsPastByEnterprise', function() {
      it('should call getMeetingsPastByEnterprise successfully', function(done) {
        //uncomment below and update the code to test getMeetingsPastByEnterprise
        //instance.getMeetingsPastByEnterprise(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingsPastByUser', function() {
      it('should call getMeetingsPastByUser successfully', function(done) {
        //uncomment below and update the code to test getMeetingsPastByUser
        //instance.getMeetingsPastByUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRoiRanges', function() {
      it('should call getRoiRanges successfully', function(done) {
        //uncomment below and update the code to test getRoiRanges
        //instance.getRoiRanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRoiRangesV2', function() {
      it('should call getRoiRangesV2 successfully', function(done) {
        //uncomment below and update the code to test getRoiRangesV2
        //instance.getRoiRangesV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopUsers', function() {
      it('should call getTopUsers successfully', function(done) {
        //uncomment below and update the code to test getTopUsers
        //instance.getTopUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopUsersV2', function() {
      it('should call getTopUsersV2 successfully', function(done) {
        //uncomment below and update the code to test getTopUsersV2
        //instance.getTopUsersV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
