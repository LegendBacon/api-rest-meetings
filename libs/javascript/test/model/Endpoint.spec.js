/**
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BlueJeansMeetingsRestApi);
  }
}(this, function(expect, BlueJeansMeetingsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BlueJeansMeetingsRestApi.Endpoint();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Endpoint', function() {
    it('should create an instance of Endpoint', function() {
      // uncomment below and update the code to test Endpoint
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be.a(BlueJeansMeetingsRestApi.Endpoint);
    });

    it('should have the property ecMode (base name: "EcMode")', function() {
      // uncomment below and update the code to test the property ecMode
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property creationtime (base name: "creationtime")', function() {
      // uncomment below and update the code to test the property creationtime
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRemoteRtcpAddress (base name: "audio.remote.rtcpAddress")', function() {
      // uncomment below and update the code to test the property audioRemoteRtcpAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoSendCodec (base name: "VideoSendCodec")', function() {
      // uncomment below and update the code to test the property videoSendCodec
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioPlayID (base name: "AudioPlayID")', function() {
      // uncomment below and update the code to test the property audioPlayID
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property callQualityRecv (base name: "CallQualityRecv")', function() {
      // uncomment below and update the code to test the property callQualityRecv
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property sessionOut (base name: "SessionOut")', function() {
      // uncomment below and update the code to test the property sessionOut
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioLocalAddress (base name: "audio.local.address")', function() {
      // uncomment below and update the code to test the property audioLocalAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property meetingid (base name: "meetingid")', function() {
      // uncomment below and update the code to test the property meetingid
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoSendWidth (base name: "VideoSendWidth")', function() {
      // uncomment below and update the code to test the property videoSendWidth
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property callQualitySend (base name: "CallQualitySend")', function() {
      // uncomment below and update the code to test the property callQualitySend
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property mhaddress (base name: "mhaddress")', function() {
      // uncomment below and update the code to test the property mhaddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property rDCControlleeCapable (base name: "RDCControlleeCapable")', function() {
      // uncomment below and update the code to test the property rDCControlleeCapable
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioCapName (base name: "AudioCapName")', function() {
      // uncomment below and update the code to test the property audioCapName
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property proxyInfo (base name: "ProxyInfo")', function() {
      // uncomment below and update the code to test the property proxyInfo
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioSendCodec (base name: "AudioSendCodec")', function() {
      // uncomment below and update the code to test the property audioSendCodec
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property vendor (base name: "vendor")', function() {
      // uncomment below and update the code to test the property vendor
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRecvWidth (base name: "VideoRecvWidth")', function() {
      // uncomment below and update the code to test the property videoRecvWidth
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property conaddress (base name: "conaddress")', function() {
      // uncomment below and update the code to test the property conaddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property talkDetected (base name: "TalkDetected")', function() {
      // uncomment below and update the code to test the property talkDetected
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property subLayout (base name: "SubLayout")', function() {
      // uncomment below and update the code to test the property subLayout
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRtcpRelay (base name: "AudioRtcpRelay")', function() {
      // uncomment below and update the code to test the property audioRtcpRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRecvLocalMute (base name: "AudioRecvLocalMute")', function() {
      // uncomment below and update the code to test the property audioRecvLocalMute
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoLocalAddress (base name: "video.local.address")', function() {
      // uncomment below and update the code to test the property videoLocalAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioLocalRtcpAddress (base name: "audio.local.rtcpAddress")', function() {
      // uncomment below and update the code to test the property audioLocalRtcpAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRtpRelay (base name: "ContentRtpRelay")', function() {
      // uncomment below and update the code to test the property contentRtpRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentLocalRtcpAddress (base name: "content.local.rtcpAddress")', function() {
      // uncomment below and update the code to test the property contentLocalRtcpAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property remoteConnectionCount (base name: "RemoteConnectionCount")', function() {
      // uncomment below and update the code to test the property remoteConnectionCount
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property callrate (base name: "callrate")', function() {
      // uncomment below and update the code to test the property callrate
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property mixerGuid (base name: "MixerGuid")', function() {
      // uncomment below and update the code to test the property mixerGuid
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property transport (base name: "transport")', function() {
      // uncomment below and update the code to test the property transport
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioCapSelectID (base name: "AudioCapSelectID")', function() {
      // uncomment below and update the code to test the property audioCapSelectID
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "CountryCode")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property rDCControllerCapable (base name: "RDCControllerCapable")', function() {
      // uncomment below and update the code to test the property rDCControllerCapable
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property pairedname (base name: "pairedname")', function() {
      // uncomment below and update the code to test the property pairedname
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRtcpRelay (base name: "VideoRtcpRelay")', function() {
      // uncomment below and update the code to test the property videoRtcpRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property endpointCpuParams (base name: "EndpointCpuParams")', function() {
      // uncomment below and update the code to test the property endpointCpuParams
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRemoteAddress (base name: "video.remote.address")', function() {
      // uncomment below and update the code to test the property videoRemoteAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRecv (base name: "ContentRecv")', function() {
      // uncomment below and update the code to test the property contentRecv
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property localName (base name: "localName")', function() {
      // uncomment below and update the code to test the property localName
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property bJNUserId (base name: "BJNUserId")', function() {
      // uncomment below and update the code to test the property bJNUserId
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRemoteAddress (base name: "content.remote.address")', function() {
      // uncomment below and update the code to test the property contentRemoteAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioSend (base name: "AudioSend")', function() {
      // uncomment below and update the code to test the property audioSend
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property participantDTMFMenus (base name: "ParticipantDTMFMenus")', function() {
      // uncomment below and update the code to test the property participantDTMFMenus
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRtcpTranspor (base name: "VideoRtcpTranspor")', function() {
      // uncomment below and update the code to test the property videoRtcpTranspor
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRtcpTransport (base name: "AudioRtcpTransport")', function() {
      // uncomment below and update the code to test the property audioRtcpTransport
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property relayNodeId (base name: "RelayNodeId")', function() {
      // uncomment below and update the code to test the property relayNodeId
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRemoteRtcpAddress (base name: "content.remote.rtcpAddress")', function() {
      // uncomment below and update the code to test the property contentRemoteRtcpAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRtpRelay (base name: "AudioRtpRelay")', function() {
      // uncomment below and update the code to test the property audioRtpRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRtpTransport (base name: "VideoRtpTransport")', function() {
      // uncomment below and update the code to test the property videoRtpTransport
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRecvLocalMute (base name: "ContentRecvLocalMute")', function() {
      // uncomment below and update the code to test the property contentRecvLocalMute
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property layout (base name: "Layout")', function() {
      // uncomment below and update the code to test the property layout
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentSend (base name: "ContentSend")', function() {
      // uncomment below and update the code to test the property contentSend
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property remoteaddress (base name: "remoteaddress")', function() {
      // uncomment below and update the code to test the property remoteaddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property meetingGuid (base name: "MeetingGuid")', function() {
      // uncomment below and update the code to test the property meetingGuid
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property connecttime (base name: "connecttime")', function() {
      // uncomment below and update the code to test the property connecttime
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property localaddress (base name: "localaddress")', function() {
      // uncomment below and update the code to test the property localaddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRemoteAddress (base name: "audio.remote.address")', function() {
      // uncomment below and update the code to test the property audioRemoteAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property bondedAudioGuid (base name: "BondedAudioGuid")', function() {
      // uncomment below and update the code to test the property bondedAudioGuid
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRecvRemoteMute (base name: "AudioRecvRemoteMute")', function() {
      // uncomment below and update the code to test the property audioRecvRemoteMute
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property sessionOutRelay (base name: "SessionOutRelay")', function() {
      // uncomment below and update the code to test the property sessionOutRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property leader (base name: "Leader")', function() {
      // uncomment below and update the code to test the property leader
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentLocalAddress (base name: "content.local.address")', function() {
      // uncomment below and update the code to test the property contentLocalAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property movieCapable (base name: "MovieCapable")', function() {
      // uncomment below and update the code to test the property movieCapable
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRecvLocalMute (base name: "VideoRecvLocalMute")', function() {
      // uncomment below and update the code to test the property videoRecvLocalMute
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRtpTransport (base name: "ContentRtpTransport")', function() {
      // uncomment below and update the code to test the property contentRtpTransport
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property rDCVersion (base name: "RDCVersion")', function() {
      // uncomment below and update the code to test the property rDCVersion
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRecv (base name: "AudioRecv")', function() {
      // uncomment below and update the code to test the property audioRecv
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRelayServer (base name: "ContentRelayServer")', function() {
      // uncomment below and update the code to test the property contentRelayServer
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRecv (base name: "VideoRecv")', function() {
      // uncomment below and update the code to test the property videoRecv
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property visibility (base name: "visibility")', function() {
      // uncomment below and update the code to test the property visibility
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property sessionid (base name: "sessionid")', function() {
      // uncomment below and update the code to test the property sessionid
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRtcpRelay (base name: "ContentRtcpRelay")', function() {
      // uncomment below and update the code to test the property contentRtcpRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property locales (base name: "locales")', function() {
      // uncomment below and update the code to test the property locales
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property medaddress (base name: "medaddress")', function() {
      // uncomment below and update the code to test the property medaddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property htmlLayoutGuid (base name: "HtmlLayoutGuid")', function() {
      // uncomment below and update the code to test the property htmlLayoutGuid
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property endpoint (base name: "endpoint")', function() {
      // uncomment below and update the code to test the property endpoint
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoDrop (base name: "VideoDrop")', function() {
      // uncomment below and update the code to test the property videoDrop
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRtcpTransport (base name: "ContentRtcpTransport")', function() {
      // uncomment below and update the code to test the property contentRtcpTransport
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRemoteRtcpAddress (base name: "video.remote.rtcpAddress")', function() {
      // uncomment below and update the code to test the property videoRemoteRtcpAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRtpRelay (base name: "VideoRtpRelay")', function() {
      // uncomment below and update the code to test the property videoRtpRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property mixaddress (base name: "mixaddress")', function() {
      // uncomment below and update the code to test the property mixaddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property sIPHTTPProxyTransport (base name: "SIPHTTPProxyTransport")', function() {
      // uncomment below and update the code to test the property sIPHTTPProxyTransport
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRecvCodec (base name: "VideoRecvCodec")', function() {
      // uncomment below and update the code to test the property videoRecvCodec
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRecvCodec (base name: "AudioRecvCodec")', function() {
      // uncomment below and update the code to test the property audioRecvCodec
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property sessionIn (base name: "SessionIn")', function() {
      // uncomment below and update the code to test the property sessionIn
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property bondedVideoGuid (base name: "BondedVideoGuid")', function() {
      // uncomment below and update the code to test the property bondedVideoGuid
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property callQuality (base name: "CallQuality")', function() {
      // uncomment below and update the code to test the property callQuality
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property meetingjointime (base name: "meetingjointime")', function() {
      // uncomment below and update the code to test the property meetingjointime
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property sessionInRelay (base name: "SessionInRelay")', function() {
      // uncomment below and update the code to test the property sessionInRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property pairedremoteaddress (base name: "pairedremoteaddress")', function() {
      // uncomment below and update the code to test the property pairedremoteaddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoSendHeight (base name: "VideoSendHeight")', function() {
      // uncomment below and update the code to test the property videoSendHeight
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRecvHeight (base name: "VideoRecvHeight")', function() {
      // uncomment below and update the code to test the property videoRecvHeight
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property secureCall (base name: "SecureCall")', function() {
      // uncomment below and update the code to test the property secureCall
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoLocalRtcpAddress (base name: "video.local.rtcpAddress")', function() {
      // uncomment below and update the code to test the property videoLocalRtcpAddress
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioPlayName (base name: "AudioPlayName")', function() {
      // uncomment below and update the code to test the property audioPlayName
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoCapID (base name: "VideoCapID")', function() {
      // uncomment below and update the code to test the property videoCapID
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioRtpTransport (base name: "AudioRtpTransport")', function() {
      // uncomment below and update the code to test the property audioRtpTransport
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property meetingInfoMode (base name: "MeetingInfoMode")', function() {
      // uncomment below and update the code to test the property meetingInfoMode
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property callhostname (base name: "callhostname")', function() {
      // uncomment below and update the code to test the property callhostname
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property callguid (base name: "callguid")', function() {
      // uncomment below and update the code to test the property callguid
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property audioCapID (base name: "AudioCapID")', function() {
      // uncomment below and update the code to test the property audioCapID
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoSend (base name: "VideoSend")', function() {
      // uncomment below and update the code to test the property videoSend
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property contentRecvCodec (base name: "ContentRecvCodec")', function() {
      // uncomment below and update the code to test the property contentRecvCodec
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property sessionRelay (base name: "SessionRelay")', function() {
      // uncomment below and update the code to test the property sessionRelay
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property videoRecvRemoteMute (base name: "VideoRecvRemoteMute")', function() {
      // uncomment below and update the code to test the property videoRecvRemoteMute
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property bondedVideoName (base name: "BondedVideoName")', function() {
      // uncomment below and update the code to test the property bondedVideoName
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property isInRoster (base name: "isInRoster")', function() {
      // uncomment below and update the code to test the property isInRoster
      //var instance = new BlueJeansMeetingsRestApi.Endpoint();
      //expect(instance).to.be();
    });

  });

}));
