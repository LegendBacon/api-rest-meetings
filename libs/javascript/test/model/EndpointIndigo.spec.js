/**
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BlueJeansMeetingsRestApi);
  }
}(this, function(expect, BlueJeansMeetingsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EndpointIndigo', function() {
    it('should create an instance of EndpointIndigo', function() {
      // uncomment below and update the code to test EndpointIndigo
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be.a(BlueJeansMeetingsRestApi.EndpointIndigo);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property callguid (base name: "callguid")', function() {
      // uncomment below and update the code to test the property callguid
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property endpoint (base name: "endpoint")', function() {
      // uncomment below and update the code to test the property endpoint
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property vendor (base name: "vendor")', function() {
      // uncomment below and update the code to test the property vendor
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property uniqId (base name: "uniqId")', function() {
      // uncomment below and update the code to test the property uniqId
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property remoteAddress (base name: "remoteAddress")', function() {
      // uncomment below and update the code to test the property remoteAddress
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property leader (base name: "leader")', function() {
      // uncomment below and update the code to test the property leader
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property secureCall (base name: "secureCall")', function() {
      // uncomment below and update the code to test the property secureCall
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property natDetected (base name: "natDetected")', function() {
      // uncomment below and update the code to test the property natDetected
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property proxy (base name: "proxy")', function() {
      // uncomment below and update the code to test the property proxy
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property roiDistance (base name: "roiDistance")', function() {
      // uncomment below and update the code to test the property roiDistance
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property mpls (base name: "mpls")', function() {
      // uncomment below and update the code to test the property mpls
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property videoShare (base name: "videoShare")', function() {
      // uncomment below and update the code to test the property videoShare
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property recording (base name: "recording")', function() {
      // uncomment below and update the code to test the property recording
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "creationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property meetingJoinTime (base name: "meetingJoinTime")', function() {
      // uncomment below and update the code to test the property meetingJoinTime
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property meetingLeaveTime (base name: "meetingLeaveTime")', function() {
      // uncomment below and update the code to test the property meetingLeaveTime
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property didNumber (base name: "didNumber")', function() {
      // uncomment below and update the code to test the property didNumber
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property summaryStats (base name: "summaryStats")', function() {
      // uncomment below and update the code to test the property summaryStats
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property endpointAttributes1 (base name: "endpointAttributes1")', function() {
      // uncomment below and update the code to test the property endpointAttributes1
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property traceroute (base name: "traceroute")', function() {
      // uncomment below and update the code to test the property traceroute
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

    it('should have the property mhtaskStopped (base name: "mhtaskStopped")', function() {
      // uncomment below and update the code to test the property mhtaskStopped
      //var instance = new BlueJeansMeetingsRestApi.EndpointIndigo();
      //expect(instance).to.be();
    });

  });

}));
