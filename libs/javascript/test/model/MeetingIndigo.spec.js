/**
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BlueJeansMeetingsRestApi);
  }
}(this, function(expect, BlueJeansMeetingsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MeetingIndigo', function() {
    it('should create an instance of MeetingIndigo', function() {
      // uncomment below and update the code to test MeetingIndigo
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be.a(BlueJeansMeetingsRestApi.MeetingIndigo);
    });

    it('should have the property meetingId (base name: "meetingId")', function() {
      // uncomment below and update the code to test the property meetingId
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property meetingUUID (base name: "meetingUUID")', function() {
      // uncomment below and update the code to test the property meetingUUID
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property userName (base name: "userName")', function() {
      // uncomment below and update the code to test the property userName
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property encryptionType (base name: "encryptionType")', function() {
      // uncomment below and update the code to test the property encryptionType
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property userFullName (base name: "userFullName")', function() {
      // uncomment below and update the code to test the property userFullName
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property userFeatures (base name: "userFeatures")', function() {
      // uncomment below and update the code to test the property userFeatures
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property scheduledFrom (base name: "scheduledFrom")', function() {
      // uncomment below and update the code to test the property scheduledFrom
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property inviteeCount (base name: "inviteeCount")', function() {
      // uncomment below and update the code to test the property inviteeCount
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property personal (base name: "personal")', function() {
      // uncomment below and update the code to test the property personal
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property muteOnEntry (base name: "muteOnEntry")', function() {
      // uncomment below and update the code to test the property muteOnEntry
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property autoRecord (base name: "autoRecord")', function() {
      // uncomment below and update the code to test the property autoRecord
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property enterpriseName (base name: "enterpriseName")', function() {
      // uncomment below and update the code to test the property enterpriseName
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property moderatorLess (base name: "moderatorLess")', function() {
      // uncomment below and update the code to test the property moderatorLess
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property totalCallSeconds (base name: "totalCallSeconds")', function() {
      // uncomment below and update the code to test the property totalCallSeconds
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property endpointsCount (base name: "endpointsCount")', function() {
      // uncomment below and update the code to test the property endpointsCount
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property concurrentEndpoints (base name: "concurrentEndpoints")', function() {
      // uncomment below and update the code to test the property concurrentEndpoints
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property liveVisibleEndpointsCount (base name: "liveVisibleEndpointsCount")', function() {
      // uncomment below and update the code to test the property liveVisibleEndpointsCount
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property qualarooRating (base name: "qualarooRating")', function() {
      // uncomment below and update the code to test the property qualarooRating
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property qualarooCount (base name: "qualarooCount")', function() {
      // uncomment below and update the code to test the property qualarooCount
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property meetingRecording (base name: "meetingRecording")', function() {
      // uncomment below and update the code to test the property meetingRecording
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property videoShare (base name: "videoShare")', function() {
      // uncomment below and update the code to test the property videoShare
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property contentShare (base name: "contentShare")', function() {
      // uncomment below and update the code to test the property contentShare
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property liveRecording (base name: "liveRecording")', function() {
      // uncomment below and update the code to test the property liveRecording
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property liveVideoShare (base name: "liveVideoShare")', function() {
      // uncomment below and update the code to test the property liveVideoShare
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property liveContentShare (base name: "liveContentShare")', function() {
      // uncomment below and update the code to test the property liveContentShare
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property largeMeeting (base name: "largeMeeting")', function() {
      // uncomment below and update the code to test the property largeMeeting
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property roiDistance (base name: "roiDistance")', function() {
      // uncomment below and update the code to test the property roiDistance
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property mpls (base name: "mpls")', function() {
      // uncomment below and update the code to test the property mpls
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BlueJeansMeetingsRestApi.MeetingIndigo();
      //expect(instance).to.be();
    });

  });

}));
