/**
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BlueJeansMeetingsRestApi);
  }
}(this, function(expect, BlueJeansMeetingsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PersonalMeetingRoom', function() {
    it('should create an instance of PersonalMeetingRoom', function() {
      // uncomment below and update the code to test PersonalMeetingRoom
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be.a(BlueJeansMeetingsRestApi.PersonalMeetingRoom);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property uuid (base name: "uuid")', function() {
      // uncomment below and update the code to test the property uuid
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property start (base name: "start")', function() {
      // uncomment below and update the code to test the property start
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property end (base name: "end")', function() {
      // uncomment below and update the code to test the property end
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property advancedMeetingOptions (base name: "advancedMeetingOptions")', function() {
      // uncomment below and update the code to test the property advancedMeetingOptions
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property notificationUrl (base name: "notificationUrl")', function() {
      // uncomment below and update the code to test the property notificationUrl
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property notificationData (base name: "notificationData")', function() {
      // uncomment below and update the code to test the property notificationData
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property moderator (base name: "moderator")', function() {
      // uncomment below and update the code to test the property moderator
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property numericMeetingId (base name: "numericMeetingId")', function() {
      // uncomment below and update the code to test the property numericMeetingId
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property attendeePasscode (base name: "attendeePasscode")', function() {
      // uncomment below and update the code to test the property attendeePasscode
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property addAttendeePasscode (base name: "addAttendeePasscode")', function() {
      // uncomment below and update the code to test the property addAttendeePasscode
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property allow720p (base name: "allow720p")', function() {
      // uncomment below and update the code to test the property allow720p
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property locked (base name: "locked")', function() {
      // uncomment below and update the code to test the property locked
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property sequenceNumber (base name: "sequenceNumber")', function() {
      // uncomment below and update the code to test the property sequenceNumber
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property icsUid (base name: "icsUid")', function() {
      // uncomment below and update the code to test the property icsUid
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property endPointType (base name: "endPointType")', function() {
      // uncomment below and update the code to test the property endPointType
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property endPointVersion (base name: "endPointVersion")', function() {
      // uncomment below and update the code to test the property endPointVersion
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property attendees (base name: "attendees")', function() {
      // uncomment below and update the code to test the property attendees
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property isLargeMeeting (base name: "isLargeMeeting")', function() {
      // uncomment below and update the code to test the property isLargeMeeting
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property lastModified (base name: "lastModified")', function() {
      // uncomment below and update the code to test the property lastModified
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property isExpired (base name: "isExpired")', function() {
      // uncomment below and update the code to test the property isExpired
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property parentMeetingId (base name: "parentMeetingId")', function() {
      // uncomment below and update the code to test the property parentMeetingId
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property parentMeetingUUID (base name: "parentMeetingUUID")', function() {
      // uncomment below and update the code to test the property parentMeetingUUID
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property nextOccurrence (base name: "nextOccurrence")', function() {
      // uncomment below and update the code to test the property nextOccurrence
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property timelessMeeting (base name: "timelessMeeting")', function() {
      // uncomment below and update the code to test the property timelessMeeting
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property endlessMeeting (base name: "endlessMeeting")', function() {
      // uncomment below and update the code to test the property endlessMeeting
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property first (base name: "first")', function() {
      // uncomment below and update the code to test the property first
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property last (base name: "last")', function() {
      // uncomment below and update the code to test the property last
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property next (base name: "next")', function() {
      // uncomment below and update the code to test the property next
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property nextStart (base name: "nextStart")', function() {
      // uncomment below and update the code to test the property nextStart
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property nextEnd (base name: "nextEnd")', function() {
      // uncomment below and update the code to test the property nextEnd
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property isPersonalMeeting (base name: "isPersonalMeeting")', function() {
      // uncomment below and update the code to test the property isPersonalMeeting
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

    it('should have the property inviteeJoinOption (base name: "inviteeJoinOption")', function() {
      // uncomment below and update the code to test the property inviteeJoinOption
      //var instance = new BlueJeansMeetingsRestApi.PersonalMeetingRoom();
      //expect(instance).to.be();
    });

  });

}));
