/**
 * BlueJeans Meetings REST API
 *  ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr> 
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BlueJeansMeetingsRestApi);
  }
}(this, function(expect, BlueJeansMeetingsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BlueJeansMeetingsRestApi.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be.a(BlueJeansMeetingsRestApi.User);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middleName")', function() {
      // uncomment below and update the code to test the property middleName
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property emailId (base name: "emailId")', function() {
      // uncomment below and update the code to test the property emailId
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property profilePicture (base name: "profilePicture")', function() {
      // uncomment below and update the code to test the property profilePicture
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property timeFormat (base name: "timeFormat")', function() {
      // uncomment below and update the code to test the property timeFormat
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property skypeId (base name: "skypeId")', function() {
      // uncomment below and update the code to test the property skypeId
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property gtalkId (base name: "gtalkId")', function() {
      // uncomment below and update the code to test the property gtalkId
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property defaultEndpoint (base name: "defaultEndpoint")', function() {
      // uncomment below and update the code to test the property defaultEndpoint
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property passwordChangeRequired (base name: "passwordChangeRequired")', function() {
      // uncomment below and update the code to test the property passwordChangeRequired
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property marketoId (base name: "marketoId")', function() {
      // uncomment below and update the code to test the property marketoId
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property optOutOffers (base name: "optOutOffers")', function() {
      // uncomment below and update the code to test the property optOutOffers
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property optOutNews (base name: "optOutNews")', function() {
      // uncomment below and update the code to test the property optOutNews
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property geoInfo (base name: "geoInfo")', function() {
      // uncomment below and update the code to test the property geoInfo
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property howDidYouHear (base name: "howDidYouHear")', function() {
      // uncomment below and update the code to test the property howDidYouHear
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property sfdcToken (base name: "sfdcToken")', function() {
      // uncomment below and update the code to test the property sfdcToken
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property linkedinProfileUrl (base name: "linkedinProfileUrl")', function() {
      // uncomment below and update the code to test the property linkedinProfileUrl
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property lastLogin (base name: "lastLogin")', function() {
      // uncomment below and update the code to test the property lastLogin
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property dateJoined (base name: "dateJoined")', function() {
      // uncomment below and update the code to test the property dateJoined
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property jid (base name: "jid")', function() {
      // uncomment below and update the code to test the property jid
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property primaryPhone (base name: "primaryPhone")', function() {
      // uncomment below and update the code to test the property primaryPhone
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property failedLoginCount (base name: "failedLoginCount")', function() {
      // uncomment below and update the code to test the property failedLoginCount
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property isInitialSetupDone (base name: "isInitialSetupDone")', function() {
      // uncomment below and update the code to test the property isInitialSetupDone
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property channelId (base name: "channel_id")', function() {
      // uncomment below and update the code to test the property channelId
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

    it('should have the property isVerified (base name: "isVerified")', function() {
      // uncomment below and update the code to test the property isVerified
      //var instance = new BlueJeansMeetingsRestApi.User();
      //expect(instance).to.be();
    });

  });

}));
