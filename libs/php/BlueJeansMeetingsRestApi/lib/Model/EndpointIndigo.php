<?php
/**
 * EndpointIndigo
 *
 * PHP version 5
 *
 * @category Class
 * @package  BlueJeansMeetingsRestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BlueJeans Meetings REST API
 *
 * ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr>
 *
 * OpenAPI spec version: 1.0.4402212019
 * Contact: glenn@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BlueJeansMeetingsRestApi\Model;

use \ArrayAccess;
use \BlueJeansMeetingsRestApi\ObjectSerializer;

/**
 * EndpointIndigo Class Doc Comment
 *
 * @category Class
 * @package  BlueJeansMeetingsRestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EndpointIndigo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EndpointIndigo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'callguid' => 'string',
        'name' => 'string',
        'endpoint' => 'string',
        'vendor' => 'string',
        'version' => 'string',
        'uniq_id' => 'string',
        'remote_address' => 'string',
        'leader' => 'bool',
        'secure_call' => 'bool',
        'nat_detected' => 'bool',
        'proxy' => 'bool',
        'roi_distance' => 'float',
        'mpls' => 'bool',
        'video_share' => 'bool',
        'recording' => 'bool',
        'creation_time' => 'int',
        'meeting_join_time' => 'int',
        'meeting_leave_time' => 'int',
        'did_number' => 'string',
        'location' => '\BlueJeansMeetingsRestApi\Model\EndpointIndigoLocation',
        'summary_stats' => '\BlueJeansMeetingsRestApi\Model\EndpointIndigoSummaryStats',
        'endpoint_attributes1' => '\BlueJeansMeetingsRestApi\Model\EndpointIndigoEndpointAttributes1',
        'traceroute' => '\BlueJeansMeetingsRestApi\Model\EndpointIndigoTraceroute',
        'mhtask_stopped' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'callguid' => null,
        'name' => null,
        'endpoint' => null,
        'vendor' => null,
        'version' => null,
        'uniq_id' => null,
        'remote_address' => null,
        'leader' => null,
        'secure_call' => null,
        'nat_detected' => null,
        'proxy' => null,
        'roi_distance' => 'float',
        'mpls' => null,
        'video_share' => null,
        'recording' => null,
        'creation_time' => 'int64',
        'meeting_join_time' => 'int64',
        'meeting_leave_time' => 'int64',
        'did_number' => null,
        'location' => null,
        'summary_stats' => null,
        'endpoint_attributes1' => null,
        'traceroute' => null,
        'mhtask_stopped' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'callguid' => 'callguid',
        'name' => 'name',
        'endpoint' => 'endpoint',
        'vendor' => 'vendor',
        'version' => 'version',
        'uniq_id' => 'uniqId',
        'remote_address' => 'remoteAddress',
        'leader' => 'leader',
        'secure_call' => 'secureCall',
        'nat_detected' => 'natDetected',
        'proxy' => 'proxy',
        'roi_distance' => 'roiDistance',
        'mpls' => 'mpls',
        'video_share' => 'videoShare',
        'recording' => 'recording',
        'creation_time' => 'creationTime',
        'meeting_join_time' => 'meetingJoinTime',
        'meeting_leave_time' => 'meetingLeaveTime',
        'did_number' => 'didNumber',
        'location' => 'location',
        'summary_stats' => 'summaryStats',
        'endpoint_attributes1' => 'endpointAttributes1',
        'traceroute' => 'traceroute',
        'mhtask_stopped' => 'mhtaskStopped'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'callguid' => 'setCallguid',
        'name' => 'setName',
        'endpoint' => 'setEndpoint',
        'vendor' => 'setVendor',
        'version' => 'setVersion',
        'uniq_id' => 'setUniqId',
        'remote_address' => 'setRemoteAddress',
        'leader' => 'setLeader',
        'secure_call' => 'setSecureCall',
        'nat_detected' => 'setNatDetected',
        'proxy' => 'setProxy',
        'roi_distance' => 'setRoiDistance',
        'mpls' => 'setMpls',
        'video_share' => 'setVideoShare',
        'recording' => 'setRecording',
        'creation_time' => 'setCreationTime',
        'meeting_join_time' => 'setMeetingJoinTime',
        'meeting_leave_time' => 'setMeetingLeaveTime',
        'did_number' => 'setDidNumber',
        'location' => 'setLocation',
        'summary_stats' => 'setSummaryStats',
        'endpoint_attributes1' => 'setEndpointAttributes1',
        'traceroute' => 'setTraceroute',
        'mhtask_stopped' => 'setMhtaskStopped'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'callguid' => 'getCallguid',
        'name' => 'getName',
        'endpoint' => 'getEndpoint',
        'vendor' => 'getVendor',
        'version' => 'getVersion',
        'uniq_id' => 'getUniqId',
        'remote_address' => 'getRemoteAddress',
        'leader' => 'getLeader',
        'secure_call' => 'getSecureCall',
        'nat_detected' => 'getNatDetected',
        'proxy' => 'getProxy',
        'roi_distance' => 'getRoiDistance',
        'mpls' => 'getMpls',
        'video_share' => 'getVideoShare',
        'recording' => 'getRecording',
        'creation_time' => 'getCreationTime',
        'meeting_join_time' => 'getMeetingJoinTime',
        'meeting_leave_time' => 'getMeetingLeaveTime',
        'did_number' => 'getDidNumber',
        'location' => 'getLocation',
        'summary_stats' => 'getSummaryStats',
        'endpoint_attributes1' => 'getEndpointAttributes1',
        'traceroute' => 'getTraceroute',
        'mhtask_stopped' => 'getMhtaskStopped'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['callguid'] = isset($data['callguid']) ? $data['callguid'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['endpoint'] = isset($data['endpoint']) ? $data['endpoint'] : null;
        $this->container['vendor'] = isset($data['vendor']) ? $data['vendor'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['uniq_id'] = isset($data['uniq_id']) ? $data['uniq_id'] : null;
        $this->container['remote_address'] = isset($data['remote_address']) ? $data['remote_address'] : null;
        $this->container['leader'] = isset($data['leader']) ? $data['leader'] : null;
        $this->container['secure_call'] = isset($data['secure_call']) ? $data['secure_call'] : null;
        $this->container['nat_detected'] = isset($data['nat_detected']) ? $data['nat_detected'] : null;
        $this->container['proxy'] = isset($data['proxy']) ? $data['proxy'] : null;
        $this->container['roi_distance'] = isset($data['roi_distance']) ? $data['roi_distance'] : null;
        $this->container['mpls'] = isset($data['mpls']) ? $data['mpls'] : null;
        $this->container['video_share'] = isset($data['video_share']) ? $data['video_share'] : null;
        $this->container['recording'] = isset($data['recording']) ? $data['recording'] : null;
        $this->container['creation_time'] = isset($data['creation_time']) ? $data['creation_time'] : null;
        $this->container['meeting_join_time'] = isset($data['meeting_join_time']) ? $data['meeting_join_time'] : null;
        $this->container['meeting_leave_time'] = isset($data['meeting_leave_time']) ? $data['meeting_leave_time'] : null;
        $this->container['did_number'] = isset($data['did_number']) ? $data['did_number'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['summary_stats'] = isset($data['summary_stats']) ? $data['summary_stats'] : null;
        $this->container['endpoint_attributes1'] = isset($data['endpoint_attributes1']) ? $data['endpoint_attributes1'] : null;
        $this->container['traceroute'] = isset($data['traceroute']) ? $data['traceroute'] : null;
        $this->container['mhtask_stopped'] = isset($data['mhtask_stopped']) ? $data['mhtask_stopped'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets callguid
     *
     * @return string
     */
    public function getCallguid()
    {
        return $this->container['callguid'];
    }

    /**
     * Sets callguid
     *
     * @param string $callguid callguid
     *
     * @return $this
     */
    public function setCallguid($callguid)
    {
        $this->container['callguid'] = $callguid;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets endpoint
     *
     * @return string
     */
    public function getEndpoint()
    {
        return $this->container['endpoint'];
    }

    /**
     * Sets endpoint
     *
     * @param string $endpoint endpoint
     *
     * @return $this
     */
    public function setEndpoint($endpoint)
    {
        $this->container['endpoint'] = $endpoint;

        return $this;
    }

    /**
     * Gets vendor
     *
     * @return string
     */
    public function getVendor()
    {
        return $this->container['vendor'];
    }

    /**
     * Sets vendor
     *
     * @param string $vendor vendor
     *
     * @return $this
     */
    public function setVendor($vendor)
    {
        $this->container['vendor'] = $vendor;

        return $this;
    }

    /**
     * Gets version
     *
     * @return string
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param string $version version
     *
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets uniq_id
     *
     * @return string
     */
    public function getUniqId()
    {
        return $this->container['uniq_id'];
    }

    /**
     * Sets uniq_id
     *
     * @param string $uniq_id uniq_id
     *
     * @return $this
     */
    public function setUniqId($uniq_id)
    {
        $this->container['uniq_id'] = $uniq_id;

        return $this;
    }

    /**
     * Gets remote_address
     *
     * @return string
     */
    public function getRemoteAddress()
    {
        return $this->container['remote_address'];
    }

    /**
     * Sets remote_address
     *
     * @param string $remote_address remote_address
     *
     * @return $this
     */
    public function setRemoteAddress($remote_address)
    {
        $this->container['remote_address'] = $remote_address;

        return $this;
    }

    /**
     * Gets leader
     *
     * @return bool
     */
    public function getLeader()
    {
        return $this->container['leader'];
    }

    /**
     * Sets leader
     *
     * @param bool $leader leader
     *
     * @return $this
     */
    public function setLeader($leader)
    {
        $this->container['leader'] = $leader;

        return $this;
    }

    /**
     * Gets secure_call
     *
     * @return bool
     */
    public function getSecureCall()
    {
        return $this->container['secure_call'];
    }

    /**
     * Sets secure_call
     *
     * @param bool $secure_call secure_call
     *
     * @return $this
     */
    public function setSecureCall($secure_call)
    {
        $this->container['secure_call'] = $secure_call;

        return $this;
    }

    /**
     * Gets nat_detected
     *
     * @return bool
     */
    public function getNatDetected()
    {
        return $this->container['nat_detected'];
    }

    /**
     * Sets nat_detected
     *
     * @param bool $nat_detected nat_detected
     *
     * @return $this
     */
    public function setNatDetected($nat_detected)
    {
        $this->container['nat_detected'] = $nat_detected;

        return $this;
    }

    /**
     * Gets proxy
     *
     * @return bool
     */
    public function getProxy()
    {
        return $this->container['proxy'];
    }

    /**
     * Sets proxy
     *
     * @param bool $proxy proxy
     *
     * @return $this
     */
    public function setProxy($proxy)
    {
        $this->container['proxy'] = $proxy;

        return $this;
    }

    /**
     * Gets roi_distance
     *
     * @return float
     */
    public function getRoiDistance()
    {
        return $this->container['roi_distance'];
    }

    /**
     * Sets roi_distance
     *
     * @param float $roi_distance roi_distance
     *
     * @return $this
     */
    public function setRoiDistance($roi_distance)
    {
        $this->container['roi_distance'] = $roi_distance;

        return $this;
    }

    /**
     * Gets mpls
     *
     * @return bool
     */
    public function getMpls()
    {
        return $this->container['mpls'];
    }

    /**
     * Sets mpls
     *
     * @param bool $mpls mpls
     *
     * @return $this
     */
    public function setMpls($mpls)
    {
        $this->container['mpls'] = $mpls;

        return $this;
    }

    /**
     * Gets video_share
     *
     * @return bool
     */
    public function getVideoShare()
    {
        return $this->container['video_share'];
    }

    /**
     * Sets video_share
     *
     * @param bool $video_share video_share
     *
     * @return $this
     */
    public function setVideoShare($video_share)
    {
        $this->container['video_share'] = $video_share;

        return $this;
    }

    /**
     * Gets recording
     *
     * @return bool
     */
    public function getRecording()
    {
        return $this->container['recording'];
    }

    /**
     * Sets recording
     *
     * @param bool $recording recording
     *
     * @return $this
     */
    public function setRecording($recording)
    {
        $this->container['recording'] = $recording;

        return $this;
    }

    /**
     * Gets creation_time
     *
     * @return int
     */
    public function getCreationTime()
    {
        return $this->container['creation_time'];
    }

    /**
     * Sets creation_time
     *
     * @param int $creation_time creation_time
     *
     * @return $this
     */
    public function setCreationTime($creation_time)
    {
        $this->container['creation_time'] = $creation_time;

        return $this;
    }

    /**
     * Gets meeting_join_time
     *
     * @return int
     */
    public function getMeetingJoinTime()
    {
        return $this->container['meeting_join_time'];
    }

    /**
     * Sets meeting_join_time
     *
     * @param int $meeting_join_time meeting_join_time
     *
     * @return $this
     */
    public function setMeetingJoinTime($meeting_join_time)
    {
        $this->container['meeting_join_time'] = $meeting_join_time;

        return $this;
    }

    /**
     * Gets meeting_leave_time
     *
     * @return int
     */
    public function getMeetingLeaveTime()
    {
        return $this->container['meeting_leave_time'];
    }

    /**
     * Sets meeting_leave_time
     *
     * @param int $meeting_leave_time meeting_leave_time
     *
     * @return $this
     */
    public function setMeetingLeaveTime($meeting_leave_time)
    {
        $this->container['meeting_leave_time'] = $meeting_leave_time;

        return $this;
    }

    /**
     * Gets did_number
     *
     * @return string
     */
    public function getDidNumber()
    {
        return $this->container['did_number'];
    }

    /**
     * Sets did_number
     *
     * @param string $did_number did_number
     *
     * @return $this
     */
    public function setDidNumber($did_number)
    {
        $this->container['did_number'] = $did_number;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \BlueJeansMeetingsRestApi\Model\EndpointIndigoLocation
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \BlueJeansMeetingsRestApi\Model\EndpointIndigoLocation $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets summary_stats
     *
     * @return \BlueJeansMeetingsRestApi\Model\EndpointIndigoSummaryStats
     */
    public function getSummaryStats()
    {
        return $this->container['summary_stats'];
    }

    /**
     * Sets summary_stats
     *
     * @param \BlueJeansMeetingsRestApi\Model\EndpointIndigoSummaryStats $summary_stats summary_stats
     *
     * @return $this
     */
    public function setSummaryStats($summary_stats)
    {
        $this->container['summary_stats'] = $summary_stats;

        return $this;
    }

    /**
     * Gets endpoint_attributes1
     *
     * @return \BlueJeansMeetingsRestApi\Model\EndpointIndigoEndpointAttributes1
     */
    public function getEndpointAttributes1()
    {
        return $this->container['endpoint_attributes1'];
    }

    /**
     * Sets endpoint_attributes1
     *
     * @param \BlueJeansMeetingsRestApi\Model\EndpointIndigoEndpointAttributes1 $endpoint_attributes1 endpoint_attributes1
     *
     * @return $this
     */
    public function setEndpointAttributes1($endpoint_attributes1)
    {
        $this->container['endpoint_attributes1'] = $endpoint_attributes1;

        return $this;
    }

    /**
     * Gets traceroute
     *
     * @return \BlueJeansMeetingsRestApi\Model\EndpointIndigoTraceroute
     */
    public function getTraceroute()
    {
        return $this->container['traceroute'];
    }

    /**
     * Sets traceroute
     *
     * @param \BlueJeansMeetingsRestApi\Model\EndpointIndigoTraceroute $traceroute traceroute
     *
     * @return $this
     */
    public function setTraceroute($traceroute)
    {
        $this->container['traceroute'] = $traceroute;

        return $this;
    }

    /**
     * Gets mhtask_stopped
     *
     * @return bool
     */
    public function getMhtaskStopped()
    {
        return $this->container['mhtask_stopped'];
    }

    /**
     * Sets mhtask_stopped
     *
     * @param bool $mhtask_stopped mhtask_stopped
     *
     * @return $this
     */
    public function setMhtaskStopped($mhtask_stopped)
    {
        $this->container['mhtask_stopped'] = $mhtask_stopped;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


