# coding: utf-8

"""
    BlueJeans Meetings REST API

     ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr>   # noqa: E501

    OpenAPI spec version: 1.0.4402212019
    Contact: glenn@bluejeans.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ApplicationListInner(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'description': 'str',
        'app_logo_url': 'str',
        'redirect_urls': 'list[str]',
        'client_id': 'str',
        'app_name': 'str'
    }

    attribute_map = {
        'description': 'description',
        'app_logo_url': 'appLogoUrl',
        'redirect_urls': 'redirectUrls',
        'client_id': 'clientId',
        'app_name': 'appName'
    }

    def __init__(self, description=None, app_logo_url=None, redirect_urls=None, client_id=None, app_name=None):  # noqa: E501
        """ApplicationListInner - a model defined in Swagger"""  # noqa: E501

        self._description = None
        self._app_logo_url = None
        self._redirect_urls = None
        self._client_id = None
        self._app_name = None
        self.discriminator = None

        if description is not None:
            self.description = description
        if app_logo_url is not None:
            self.app_logo_url = app_logo_url
        if redirect_urls is not None:
            self.redirect_urls = redirect_urls
        if client_id is not None:
            self.client_id = client_id
        if app_name is not None:
            self.app_name = app_name

    @property
    def description(self):
        """Gets the description of this ApplicationListInner.  # noqa: E501


        :return: The description of this ApplicationListInner.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApplicationListInner.


        :param description: The description of this ApplicationListInner.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def app_logo_url(self):
        """Gets the app_logo_url of this ApplicationListInner.  # noqa: E501

        Location of Logo to display on BlueJeans Oauth sign-in page  # noqa: E501

        :return: The app_logo_url of this ApplicationListInner.  # noqa: E501
        :rtype: str
        """
        return self._app_logo_url

    @app_logo_url.setter
    def app_logo_url(self, app_logo_url):
        """Sets the app_logo_url of this ApplicationListInner.

        Location of Logo to display on BlueJeans Oauth sign-in page  # noqa: E501

        :param app_logo_url: The app_logo_url of this ApplicationListInner.  # noqa: E501
        :type: str
        """

        self._app_logo_url = app_logo_url

    @property
    def redirect_urls(self):
        """Gets the redirect_urls of this ApplicationListInner.  # noqa: E501


        :return: The redirect_urls of this ApplicationListInner.  # noqa: E501
        :rtype: list[str]
        """
        return self._redirect_urls

    @redirect_urls.setter
    def redirect_urls(self, redirect_urls):
        """Sets the redirect_urls of this ApplicationListInner.


        :param redirect_urls: The redirect_urls of this ApplicationListInner.  # noqa: E501
        :type: list[str]
        """

        self._redirect_urls = redirect_urls

    @property
    def client_id(self):
        """Gets the client_id of this ApplicationListInner.  # noqa: E501

        OAuth key created for this application  # noqa: E501

        :return: The client_id of this ApplicationListInner.  # noqa: E501
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this ApplicationListInner.

        OAuth key created for this application  # noqa: E501

        :param client_id: The client_id of this ApplicationListInner.  # noqa: E501
        :type: str
        """

        self._client_id = client_id

    @property
    def app_name(self):
        """Gets the app_name of this ApplicationListInner.  # noqa: E501

        Name that application registered under  # noqa: E501

        :return: The app_name of this ApplicationListInner.  # noqa: E501
        :rtype: str
        """
        return self._app_name

    @app_name.setter
    def app_name(self, app_name):
        """Sets the app_name of this ApplicationListInner.

        Name that application registered under  # noqa: E501

        :param app_name: The app_name of this ApplicationListInner.  # noqa: E501
        :type: str
        """

        self._app_name = app_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApplicationListInner, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApplicationListInner):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
