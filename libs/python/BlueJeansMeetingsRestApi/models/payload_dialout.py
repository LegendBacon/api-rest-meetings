# coding: utf-8

"""
    BlueJeans Meetings REST API

     ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr>   # noqa: E501

    OpenAPI spec version: 1.0.4402212019
    Contact: glenn@bluejeans.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PayloadDialout(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'connection_guid': 'str',
        'country_code': 'int',
        'paired_participant_guid': 'str',
        'phone_number': 'str'
    }

    attribute_map = {
        'connection_guid': 'connectionGuid',
        'country_code': 'countryCode',
        'paired_participant_guid': 'pairedParticipantGuid',
        'phone_number': 'phoneNumber'
    }

    def __init__(self, connection_guid=None, country_code=None, paired_participant_guid=None, phone_number=None):  # noqa: E501
        """PayloadDialout - a model defined in Swagger"""  # noqa: E501

        self._connection_guid = None
        self._country_code = None
        self._paired_participant_guid = None
        self._phone_number = None
        self.discriminator = None

        if connection_guid is not None:
            self.connection_guid = connection_guid
        if country_code is not None:
            self.country_code = country_code
        if paired_participant_guid is not None:
            self.paired_participant_guid = paired_participant_guid
        if phone_number is not None:
            self.phone_number = phone_number

    @property
    def connection_guid(self):
        """Gets the connection_guid of this PayloadDialout.  # noqa: E501

        Globally unique identifier associated with this endpoint in this meeting. (Typically a string starting with \"connguid:\")  # noqa: E501

        :return: The connection_guid of this PayloadDialout.  # noqa: E501
        :rtype: str
        """
        return self._connection_guid

    @connection_guid.setter
    def connection_guid(self, connection_guid):
        """Sets the connection_guid of this PayloadDialout.

        Globally unique identifier associated with this endpoint in this meeting. (Typically a string starting with \"connguid:\")  # noqa: E501

        :param connection_guid: The connection_guid of this PayloadDialout.  # noqa: E501
        :type: str
        """

        self._connection_guid = connection_guid

    @property
    def country_code(self):
        """Gets the country_code of this PayloadDialout.  # noqa: E501

        One or two digit number corresponding to the ITU identifier for the country being called  # noqa: E501

        :return: The country_code of this PayloadDialout.  # noqa: E501
        :rtype: int
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this PayloadDialout.

        One or two digit number corresponding to the ITU identifier for the country being called  # noqa: E501

        :param country_code: The country_code of this PayloadDialout.  # noqa: E501
        :type: int
        """

        self._country_code = country_code

    @property
    def paired_participant_guid(self):
        """Gets the paired_participant_guid of this PayloadDialout.  # noqa: E501

        Globally unique identifier associated with the media component of this endpoint for this meeting.  (Typically a string starting with \"seamguid:\")  # noqa: E501

        :return: The paired_participant_guid of this PayloadDialout.  # noqa: E501
        :rtype: str
        """
        return self._paired_participant_guid

    @paired_participant_guid.setter
    def paired_participant_guid(self, paired_participant_guid):
        """Sets the paired_participant_guid of this PayloadDialout.

        Globally unique identifier associated with the media component of this endpoint for this meeting.  (Typically a string starting with \"seamguid:\")  # noqa: E501

        :param paired_participant_guid: The paired_participant_guid of this PayloadDialout.  # noqa: E501
        :type: str
        """

        self._paired_participant_guid = paired_participant_guid

    @property
    def phone_number(self):
        """Gets the phone_number of this PayloadDialout.  # noqa: E501

        The invited user's phone number  # noqa: E501

        :return: The phone_number of this PayloadDialout.  # noqa: E501
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this PayloadDialout.

        The invited user's phone number  # noqa: E501

        :param phone_number: The phone_number of this PayloadDialout.  # noqa: E501
        :type: str
        """

        self._phone_number = phone_number

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PayloadDialout, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PayloadDialout):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
