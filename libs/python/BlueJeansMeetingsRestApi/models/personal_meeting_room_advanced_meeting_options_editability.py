# coding: utf-8

"""
    BlueJeans Meetings REST API

     ## Video That Works Where You Do. <p>This site provides developers access to APIs from BlueJean's Meetings meeting service.  From here you can see and try actual API calls to manage User Accounts, Meetings, and Recordings, pull Analytical Data and Current State information.</p>    <nosdk> <hr> <div> <div class=\"key\">     <a href=\"./basics.html\" target=\"_\"><img class=\"keyimg\" src=\"./img/bjnmeeting.png\"/></a> </div> <div class=\"keybox\"> Basic instructions about What is a BlueJeans Meeting, and Getting Started Using API's, are <a href=\"./basics.html\" target=\"_blank\">available here <i class=\"glyphicon glyphicon-new-window\"></i></a>. </div> </div> <hr> <alert>2/21/2019</alert> Change response of Change layout and Endpoint API's to 204<br/> 12/03/2018 Add API for setting user profile photograph.<br/> 10/17/2018 Updated API field definitions for time variables to be 64-bit .<br/> 7/23/2018 Corrected errors in API definition file.<br/> 7/10/2018 Deprecated some Command Center API's.  Exposed API's that Summarize usage.<br/> 7/06/2018 Added API for changing ownership of recordings.<br/> 6/28/2018 Restored Create Enterprise Account, added Enterprise and User Profile Tag API's.<br/> 6/01/2018 Clarified Access Token requirements for meeting endpoint API's.<br/> 5/21/2018 Corrected return model for meeting history call.<br/> </nosdk> <hr>   # noqa: E501

    OpenAPI spec version: 1.0.4402212019
    Contact: glenn@bluejeans.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PersonalMeetingRoomAdvancedMeetingOptionsEditability(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'auto_record': 'bool',
        'enforce_meeting_encryption': 'bool',
        'video_best_fit': 'bool',
        'enforce_meeting_encryption_allow_pstn': 'bool',
        'disallow_chat': 'bool',
        'mute_participants_on_entry': 'bool',
        'moderator_less': 'bool',
        'show_all_attendees_in_meeting_invite': 'bool'
    }

    attribute_map = {
        'auto_record': 'autoRecord',
        'enforce_meeting_encryption': 'enforceMeetingEncryption',
        'video_best_fit': 'videoBestFit',
        'enforce_meeting_encryption_allow_pstn': 'enforceMeetingEncryptionAllowPSTN',
        'disallow_chat': 'disallowChat',
        'mute_participants_on_entry': 'muteParticipantsOnEntry',
        'moderator_less': 'moderatorLess',
        'show_all_attendees_in_meeting_invite': 'showAllAttendeesInMeetingInvite'
    }

    def __init__(self, auto_record=None, enforce_meeting_encryption=None, video_best_fit=None, enforce_meeting_encryption_allow_pstn=None, disallow_chat=None, mute_participants_on_entry=None, moderator_less=None, show_all_attendees_in_meeting_invite=None):  # noqa: E501
        """PersonalMeetingRoomAdvancedMeetingOptionsEditability - a model defined in Swagger"""  # noqa: E501

        self._auto_record = None
        self._enforce_meeting_encryption = None
        self._video_best_fit = None
        self._enforce_meeting_encryption_allow_pstn = None
        self._disallow_chat = None
        self._mute_participants_on_entry = None
        self._moderator_less = None
        self._show_all_attendees_in_meeting_invite = None
        self.discriminator = None

        if auto_record is not None:
            self.auto_record = auto_record
        if enforce_meeting_encryption is not None:
            self.enforce_meeting_encryption = enforce_meeting_encryption
        if video_best_fit is not None:
            self.video_best_fit = video_best_fit
        if enforce_meeting_encryption_allow_pstn is not None:
            self.enforce_meeting_encryption_allow_pstn = enforce_meeting_encryption_allow_pstn
        if disallow_chat is not None:
            self.disallow_chat = disallow_chat
        if mute_participants_on_entry is not None:
            self.mute_participants_on_entry = mute_participants_on_entry
        if moderator_less is not None:
            self.moderator_less = moderator_less
        if show_all_attendees_in_meeting_invite is not None:
            self.show_all_attendees_in_meeting_invite = show_all_attendees_in_meeting_invite

    @property
    def auto_record(self):
        """Gets the auto_record of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501

        Allow UI to edit AutoRecord field  # noqa: E501

        :return: The auto_record of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :rtype: bool
        """
        return self._auto_record

    @auto_record.setter
    def auto_record(self, auto_record):
        """Sets the auto_record of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.

        Allow UI to edit AutoRecord field  # noqa: E501

        :param auto_record: The auto_record of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :type: bool
        """

        self._auto_record = auto_record

    @property
    def enforce_meeting_encryption(self):
        """Gets the enforce_meeting_encryption of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501

        Allow UI to edit this field  # noqa: E501

        :return: The enforce_meeting_encryption of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :rtype: bool
        """
        return self._enforce_meeting_encryption

    @enforce_meeting_encryption.setter
    def enforce_meeting_encryption(self, enforce_meeting_encryption):
        """Sets the enforce_meeting_encryption of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.

        Allow UI to edit this field  # noqa: E501

        :param enforce_meeting_encryption: The enforce_meeting_encryption of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :type: bool
        """

        self._enforce_meeting_encryption = enforce_meeting_encryption

    @property
    def video_best_fit(self):
        """Gets the video_best_fit of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501

        Allow UI to edict videoBestFit field  # noqa: E501

        :return: The video_best_fit of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :rtype: bool
        """
        return self._video_best_fit

    @video_best_fit.setter
    def video_best_fit(self, video_best_fit):
        """Sets the video_best_fit of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.

        Allow UI to edict videoBestFit field  # noqa: E501

        :param video_best_fit: The video_best_fit of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :type: bool
        """

        self._video_best_fit = video_best_fit

    @property
    def enforce_meeting_encryption_allow_pstn(self):
        """Gets the enforce_meeting_encryption_allow_pstn of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501

        Allow UI to edit this field  # noqa: E501

        :return: The enforce_meeting_encryption_allow_pstn of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :rtype: bool
        """
        return self._enforce_meeting_encryption_allow_pstn

    @enforce_meeting_encryption_allow_pstn.setter
    def enforce_meeting_encryption_allow_pstn(self, enforce_meeting_encryption_allow_pstn):
        """Sets the enforce_meeting_encryption_allow_pstn of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.

        Allow UI to edit this field  # noqa: E501

        :param enforce_meeting_encryption_allow_pstn: The enforce_meeting_encryption_allow_pstn of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :type: bool
        """

        self._enforce_meeting_encryption_allow_pstn = enforce_meeting_encryption_allow_pstn

    @property
    def disallow_chat(self):
        """Gets the disallow_chat of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501

        Allow UI to edit the disallowChat field  # noqa: E501

        :return: The disallow_chat of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :rtype: bool
        """
        return self._disallow_chat

    @disallow_chat.setter
    def disallow_chat(self, disallow_chat):
        """Sets the disallow_chat of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.

        Allow UI to edit the disallowChat field  # noqa: E501

        :param disallow_chat: The disallow_chat of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :type: bool
        """

        self._disallow_chat = disallow_chat

    @property
    def mute_participants_on_entry(self):
        """Gets the mute_participants_on_entry of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501

        Allow UI to edit muteParticipantsOnEntry field  # noqa: E501

        :return: The mute_participants_on_entry of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :rtype: bool
        """
        return self._mute_participants_on_entry

    @mute_participants_on_entry.setter
    def mute_participants_on_entry(self, mute_participants_on_entry):
        """Sets the mute_participants_on_entry of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.

        Allow UI to edit muteParticipantsOnEntry field  # noqa: E501

        :param mute_participants_on_entry: The mute_participants_on_entry of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :type: bool
        """

        self._mute_participants_on_entry = mute_participants_on_entry

    @property
    def moderator_less(self):
        """Gets the moderator_less of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501

        Allow UI to edit moderatorLess field  # noqa: E501

        :return: The moderator_less of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :rtype: bool
        """
        return self._moderator_less

    @moderator_less.setter
    def moderator_less(self, moderator_less):
        """Sets the moderator_less of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.

        Allow UI to edit moderatorLess field  # noqa: E501

        :param moderator_less: The moderator_less of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :type: bool
        """

        self._moderator_less = moderator_less

    @property
    def show_all_attendees_in_meeting_invite(self):
        """Gets the show_all_attendees_in_meeting_invite of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501

        Allow UI to edit this field  # noqa: E501

        :return: The show_all_attendees_in_meeting_invite of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :rtype: bool
        """
        return self._show_all_attendees_in_meeting_invite

    @show_all_attendees_in_meeting_invite.setter
    def show_all_attendees_in_meeting_invite(self, show_all_attendees_in_meeting_invite):
        """Sets the show_all_attendees_in_meeting_invite of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.

        Allow UI to edit this field  # noqa: E501

        :param show_all_attendees_in_meeting_invite: The show_all_attendees_in_meeting_invite of this PersonalMeetingRoomAdvancedMeetingOptionsEditability.  # noqa: E501
        :type: bool
        """

        self._show_all_attendees_in_meeting_invite = show_all_attendees_in_meeting_invite

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PersonalMeetingRoomAdvancedMeetingOptionsEditability, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PersonalMeetingRoomAdvancedMeetingOptionsEditability):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
